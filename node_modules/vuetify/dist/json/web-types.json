{
  "$schema": "http://json.schemastore.org/web-types",
  "framework": "vue",
  "name": "vuetify",
  "version": "3.5.0",
  "contributions": {
    "html": {
      "types-syntax": "typescript",
      "description-markup": "markdown",
      "tags": [
        {
          "name": "VAlert",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAlert"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-alert",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Adds a colored border to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'top' | 'end' | 'bottom' | 'start'"
              }
            },
            {
              "name": "borderColor",
              "description": "Specifies the color of the border. Accepts any color value.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "closable",
              "description": "Adds a close icon that can hide the alert.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeIcon",
              "description": "Change the default icon used for **closable** alerts.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'$close'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "type",
              "description": "Create a specialized alert that uses a contextual color and has a pre-defined icon.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "'success' | 'info' | 'warning' | 'error'"
              }
            },
            {
              "name": "closeLabel",
              "description": "Text used for *aria-label* on **closable** alerts. Can also be customized globally in [Internationalization](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "modelValue",
              "description": "Controls whether the component is visible or hidden.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prominent",
              "description": "Displays a larger vertically centered icon to draw more attention.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#props",
              "default": "'flat'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            }
          ],
          "events": [
            {
              "name": "click:close",
              "description": "Emitted when close icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "prepend",
              "description": "Slot for icon at beginning of alert.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "append",
              "description": "Slot for icon at end of alert.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots"
            },
            {
              "name": "close",
              "description": "Slot for icon used in **dismissible** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-alert#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAlertTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAlertTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-alert-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-alert-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-alert-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VApp",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VApp"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app",
          "attributes": [
            {
              "name": "fullHeight",
              "description": "Sets the component height to 100%.",
              "doc-url": "https://vuetifyjs.com/api/v-app#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "overlaps",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-app#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-app#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAppBar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAppBar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app-bar",
          "attributes": [
            {
              "name": "image",
              "description": "Specifies a [v-img](/components/images) as the component's background.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "flat",
              "description": "Removes the component's **box-shadow**.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "collapse",
              "description": "Morphs the component into a collapsed state, reducing its maximum width.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "location",
              "description": "Aligns the component towards the top or bottom.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "'top'",
              "value": {
                "kind": "expression",
                "type": "'top' | 'bottom'"
              }
            },
            {
              "name": "absolute",
              "description": "Applies position: absolute to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'prominent' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "extended",
              "description": "Use this prop to increase the height of the toolbar _without_ using the `extension` slot for adding content. May be used in conjunction with the **extension-height** prop, and any of the other props that affect the height of the toolbar, e.g. **prominent**, **dense**, etc., **WITH THE EXCEPTION** of **height**.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "extensionHeight",
              "description": "Designate an explicit height for the `extension` slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "floating",
              "description": "Applies **display: inline-flex** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Designates a specific height for the toolbar. Overrides the heights imposed by other props, e.g. **prominent**, **dense**, **extended**, etc.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "64",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "'header'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "scrollTarget",
              "description": "The element to target for scrolling events. Uses `window` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "scrollThreshold",
              "description": "The amount of scroll distance down before **scroll-behavior** activates.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "scrollBehavior",
              "description": "Specify an action to take when the scroll position of **scroll-target** reaches **scroll-threshold**. Accepts any combination of hide, inverted, collapse, elevate, and fade-image. Multiple values can be used, separated by a space.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#props",
              "value": {
                "kind": "expression",
                "type": "| (string & {})\n  | 'hide'\n  | 'inverted'\n  | 'collapse'\n  | 'elevate'\n  | 'fade-image'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "image",
              "description": "Expects the [`v-img`](/components/images/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            },
            {
              "name": "extension",
              "description": "Slot positioned directly under the main content of the toolbar. Height of this slot can be set explicitly with the **extension-height** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAppBarNavIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAppBarNavIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "flat",
              "description": "Removes the button box shadow. This is different than using the 'flat' variant.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "block",
              "description": "Expands the button to 100% of available space.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "slim",
              "description": "Reduces padding to 0 8px.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "stacked",
              "description": "Displays the button as a flex-column.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'button'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#props",
              "default": "'$menu'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-nav-icon#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAppBarTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAppBarTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-app-bar-title",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-app-bar-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAutocomplete",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAutocomplete"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-autocomplete",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "autoSelectFirst",
              "description": "When searching, will always highlight the first option and select it on blur. `exact` will only highlight and select exact matches.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'exact'"
              }
            },
            {
              "name": "clearOnSelect",
              "description": "Reset the search text when a selection is made while using the **multiple** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "filterMode",
              "description": "Controls how the results of `customFilter` and `customKeyFilter` are combined. All modes only apply `customFilter` to columns not specified in `customKeyFilter`.\n\n- **some**: There is at least one match from either the custom filter or the custom key filter.\n- **every**: All columns match either the custom filter or the custom key filter.\n- **union**: There is at least one match from the custom filter, or all columns match the custom key filters.\n- **intersection**: There is at least one match from the custom filter, and all columns match the custom key filters.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'some' | 'every' | 'union' | 'intersection'"
              }
            },
            {
              "name": "noFilter",
              "description": "Do not apply filtering when searching. Useful when data is being filtered server side.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customFilter",
              "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "flat",
              "description": "Removes box shadow when using a variant with elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object. `customFilter` is skipped for columns with `customKeyFilter` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "['title']",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "chips",
              "description": "Changes display of selections to chips.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closableChips",
              "description": "Enables the [closable](/api/v-chip/#props-closable) prop on all [v-chip](/components/chips/) components.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeText",
              "description": "Text set to to the inputs `aria-label` and `title` when input menu is closed.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "Sets input type.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "openText",
              "description": "Text set to to the inputs **aria-label** and **title** when input menu is open.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$vuetify.open'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideSelected",
              "description": "Do not display in the select menu items that are already selected.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "listProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/Select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "items",
              "description": "Can be an array of objects or strings. By default objects should have **title** and **value** properties, and can optionally have a **props** property containing any [VListItem props](/api/v-list-item/#props). Keys to use for these can be changed with the **item-title**, **item-value**, and **item-props** props.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L72-L76\" target=\"_blank\">SelectItemKey</a>"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "menu",
              "description": "Renders with the menu open by default.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "menuIcon",
              "description": "Sets the the spin icon.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$dropdown'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "menuProps",
              "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [v-menu](/api/v-menu/#props) props, camelCase keys are recommended.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "openOnClear",
              "description": "Open's the menu whenever the clear icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "itemColor",
              "description": "Sets color of selected items.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "The role attribute applied to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'combobox'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "| 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clearable** prop is set to true.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "number | ((value: any) => number)"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:search",
              "description": "Event emitted when the search value changes.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:menu",
              "description": "Event that is emitted when the component's menu state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance. The root element of this slot must be a **v-list-item** with `v-bind=\"props\"` applied. `props` includes everything required for the default select list behaviour - including title, value, click handlers, virtual scrolling, and anything else that has been added with `item-props`.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "chip",
              "description": "Slot for custom chip when using the [chip](#property-chip) prop.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "selection",
              "description": "Define a custom selection appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "prepend-item",
              "description": "Adds an item before menu content.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "append-item",
              "description": "Adds an item after menu content.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-autocomplete#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VAvatar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VAvatar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-avatar",
          "attributes": [
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "image",
              "description": "Apply a specific image using [v-img](/components/images/).",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#props",
              "default": "'flat'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-avatar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBadge",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBadge"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-badge",
          "attributes": [
            {
              "name": "bordered",
              "description": "Applies a **2px** by default and **1.5px** border around the badge when using the **dot** property.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "content",
              "description": "Text content to show in the badge.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "dot",
              "description": "Reduce the size of the badge and hide its contents.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "floating",
              "description": "Elevates the badge above the slotted content.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "inline",
              "description": "Moves the badge to be inline with the wrapping element. Supports the usage of the **left** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "label",
              "description": "The **aria-label** used for the badge.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'$vuetify.badge'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum number allowed when using the **content** prop with a `number` like value. If the content number exceeds the maximum value, a `+` suffix is added.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "offsetX",
              "description": "Offset the badge on the x-axis.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "offsetY",
              "description": "Offset the badge on the y-axis.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "textColor",
              "description": "Applies a specified color to the control text - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'top end'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#props",
              "default": "'scale-rotate-transition'",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#slots"
            },
            {
              "name": "badge",
              "description": "The slot used for the badge's content.",
              "doc-url": "https://vuetifyjs.com/api/v-badge#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBanner",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBanner"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-banner",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "avatar",
              "description": "Designates a specific src image to pass to the thumbnail.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "stacked",
              "description": "Forces the banner actions onto a new line. This is not applicable when the banner has `lines=\"one\"`.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sticky",
              "description": "Applies `position: sticky` to the component with `top: 0`. You can find more information on the [MDN documentation for sticky position](https://developer.mozilla.org/en-US/docs/Web/CSS/position).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "mobileBreakpoint",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/display.json))",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "'sticky' | 'static' | 'relative' | 'fixed' | 'absolute'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lines",
              "description": "The amount of visible lines of text before it truncates.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#props",
              "value": {
                "kind": "expression",
                "type": "'one' | 'two' | 'three'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            },
            {
              "name": "actions",
              "description": "The slot used for the action's content such as a [v-btn](/components/buttons).",
              "doc-url": "https://vuetifyjs.com/api/v-banner#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBannerActions",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBannerActions"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-banner-actions",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-banner-actions#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-actions#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-actions#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBannerText",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBannerText"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-banner-text",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-text#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-banner-text#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBottomNavigation",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBottomNavigation"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation",
          "attributes": [
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "grow",
              "description": "Force all [v-btn](/components/buttons) children to take up all available horizontal space.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Changes the orientation and active state styling of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "56",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'bottom-navigation'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'header'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "'v-btn--selected'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-navigation#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBottomSheet",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBottomSheet"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet",
          "attributes": [
            {
              "name": "activator",
              "description": "Explicitly sets the overlay's activator.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance"
              }
            },
            {
              "name": "inset",
              "description": "Reduces the sheet content maximum width to 70%.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "fullscreen",
              "description": "Changes layout for fullscreen display.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "retainFocus",
              "description": "Tab focus will return to the first child of the dialog by default. Disable this when using external tools that require focus such as TinyMCE or vue-clipboard.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrollable",
              "description": "When set to true, expects a `v-card` and a `v-card-text` component with a designated height. For more information, check out the [scrollable example](/components/dialogs#scrollable).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "contentProps",
              "description": "Apply custom properties to the content.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of a `v-dialog`'s content when using the **persistent** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing **esc** key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "2400",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "target",
              "description": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "| Element\n  | 'parent'\n  | 'cursor'\n  | (string & {})\n  | ComponentPublicInstance\n  | [number, number]"
              }
            },
            {
              "name": "activatorProps",
              "description": "Apply custom properties to the activator.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "openOnClick",
              "description": "Activate the component when the activator is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnHover",
              "description": "Activate the component when the activator is hovered.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnFocus",
              "description": "Activate the component when the activator is focused.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>"
              }
            },
            {
              "name": "location",
              "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both..",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'center center'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "Strategy used when the component is activate and user scrolls.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'block'",
              "value": {
                "kind": "expression",
                "type": "'none' | 'close' | 'block' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "'bottom-sheet-transition'",
              "value": {
                "kind": "expression",
                "type": "| { component: Component }\n  | string\n  | boolean\n  | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-bottom-sheet#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBreadcrumbs",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBreadcrumbs"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs",
          "attributes": [
            {
              "name": "divider",
              "description": "Specifies the dividing character between items.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "'/'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(\n  | string\n  | (Partial<LinkProps> & { title: string; disabled: boolean })\n)[]"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#props",
              "default": "'ul'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "prepend",
              "description": "The slot used for prepend content.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots"
            },
            {
              "name": "title",
              "description": "The slot used to display the title of each breadcrumb.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "string | Partial<LinkProps> & { title: string; disabled: boolean }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "divider",
              "description": "The slot used for dividers.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "string | Partial<LinkProps> & { title: string; disabled: boolean }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "string | Partial<LinkProps> & { title: string; disabled: boolean }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBreadcrumbsDivider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBreadcrumbsDivider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-divider",
          "attributes": [
            {
              "name": "divider",
              "description": "Specifies the dividing character between items.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-divider#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-divider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBreadcrumbsItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBreadcrumbsItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item",
          "attributes": [
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#props",
              "default": "'li'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-breadcrumbs-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBtn",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBtn"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-btn",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "flat",
              "description": "Removes the button box shadow. This is different than using the 'flat' variant.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "block",
              "description": "Expands the button to 100% of available space.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "slim",
              "description": "Reduces padding to 0 8px.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "stacked",
              "description": "Displays the button as a flex-column.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'button'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-btn#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBtnGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBtnGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-btn-group",
          "attributes": [
            {
              "name": "divided",
              "description": "Add dividers between children [v-btn](/components/buttons) components.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-group#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VBtnToggle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VBtnToggle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-btn-toggle",
          "attributes": [
            {
              "name": "divided",
              "description": "Add dividers between children [v-btn](/components/buttons) components.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Round edge buttons.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-btn-toggle#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "selected",
                  "type": "Ref<readonly number[]>"
                },
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCalendar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCalendar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-calendar",
          "attributes": [
            {
              "name": "hideHeader",
              "description": "Determines whether the header is hidden in the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideWeekNumber",
              "description": "Toggles the display of week numbers in a calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "allowedDates",
              "description": "Determines which dates are selectable.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "Function | unknown[]"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "month",
              "description": "Specifies the month for the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "showAdjacentMonths",
              "description": "Shows or hides days from adjacent months.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "year",
              "description": "Specifies the year for the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "weekdays",
              "description": "Specifies which days of the week to display.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "[0, 1, 2, 3, 4, 5, 6]",
              "value": {
                "kind": "expression",
                "type": "number[]"
              }
            },
            {
              "name": "displayValue",
              "description": "Value to display for the component, possibly a formatted date.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "unknown[]"
              }
            },
            {
              "name": "max",
              "description": "Maximum date or value that can be selected.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "min",
              "description": "Minimum date or value that can be selected.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "hideDayHeader",
              "description": "Determines whether the day header is visible in the calendar day view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "intervals",
              "description": "Total number of intervals in a day view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "24",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "day",
              "description": "Represents the specific day associated with the interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "dayIndex",
              "description": "Index of the day this interval is a part of, in a week or month view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "events",
              "description": "Array of events specific to this interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "intervalDivisions",
              "description": "Number of subdivisions within this interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalDuration",
              "description": "Duration of this specific interval in minutes.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "60",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalHeight",
              "description": "Height of the interval in pixels in the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalFormat",
              "description": "Formatting rule for displaying the interval, as a string or function.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "'fullTime12h'",
              "value": {
                "kind": "expression",
                "type": "string | Function"
              }
            },
            {
              "name": "intervalStart",
              "description": "Starting time for this specific interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "nextIcon",
              "description": "The icon to use for the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevIcon",
              "description": "The icon to use for the prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "'$vuetify.calendar.today'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "viewMode",
              "description": "The current view mode of the calendar.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#props",
              "default": "'month'",
              "value": {
                "kind": "expression",
                "type": "'month' | 'day' | 'week'"
              }
            }
          ],
          "events": [
            {
              "name": "next",
              "description": "Emitted when moving to the next time period.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "any[]\n"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Emitted when moving to the previous time period.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "any[]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "any[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "header",
              "description": "Slot for custom header content.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar#slots",
              "vue-properties": [
                {
                  "name": "title",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCalendarDay",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCalendarDay"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-calendar-day",
          "attributes": [
            {
              "name": "hideDayHeader",
              "description": "Determines whether the day header is visible in the calendar day view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "intervals",
              "description": "Specifies the total number of time intervals for the day in the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "24",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "day",
              "description": "Represents the specific day associated with the interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "dayIndex",
              "description": "Index of the day this interval is a part of, in a week or month view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "events",
              "description": "Array of events specific to this interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "intervalDivisions",
              "description": "Number of subdivisions within this interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalDuration",
              "description": "Duration of this specific interval in minutes.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "60",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalHeight",
              "description": "Height of the interval in pixels in the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalFormat",
              "description": "Formatting rule for displaying the interval, as a string or function.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "'fullTime12h'",
              "value": {
                "kind": "expression",
                "type": "string | Function"
              }
            },
            {
              "name": "intervalStart",
              "description": "Starting time for this specific interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-day#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCalendarHeader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCalendarHeader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-calendar-header",
          "attributes": [
            {
              "name": "nextIcon",
              "description": "The icon to use for the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevIcon",
              "description": "The icon to use for the prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#props",
              "default": "'$vuetify.calendar.today'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "viewMode",
              "description": "The current view mode of the calendar.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#props",
              "default": "'month'",
              "value": {
                "kind": "expression",
                "type": "'month' | 'week' | 'day'"
              }
            }
          ],
          "events": [
            {
              "name": "click:next",
              "description": "Event emitted when clicking the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:prev",
              "description": "Event emitted when clicking the prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:toToday",
              "description": "Event emitted when clicking the today button.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-header#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCalendarInterval",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCalendarInterval"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-calendar-interval",
          "attributes": [
            {
              "name": "index",
              "description": "Index or position of the interval in the day view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "day",
              "description": "Represents the specific day associated with the interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "dayIndex",
              "description": "Index of the day this interval is a part of, in a week or month view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "events",
              "description": "Array of events specific to this interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "intervalDivisions",
              "description": "Number of subdivisions within this interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalDuration",
              "description": "Duration of this specific interval in minutes.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "default": "60",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalHeight",
              "description": "Height of the interval in pixels in the calendar view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalFormat",
              "description": "Formatting rule for displaying the interval, as a string or function.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "default": "'fullTime12h'",
              "value": {
                "kind": "expression",
                "type": "string | Function"
              }
            },
            {
              "name": "intervalStart",
              "description": "Starting time for this specific interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCalendarIntervalEvent",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCalendarIntervalEvent"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event",
          "attributes": [
            {
              "name": "allDay",
              "description": "Indicates whether the event spans the entire day.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "interval",
              "description": "The specific time interval this event is associated with.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "intervalDivisions",
              "description": "Number of subdivisions within the interval for this event.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalDuration",
              "description": "Duration of the interval in which this event occurs, in minutes.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "intervalHeight",
              "description": "Height of the interval in the calendar view, in pixels.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "event",
              "description": "The event object associated with this calendar interval.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-interval-event#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCalendarMonthDay",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCalendarMonthDay"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "day",
              "description": "Represents the specific day in the month view of the calendar.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "events",
              "description": "Array of events associated with this specific day.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#props",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#slots"
            },
            {
              "name": "content",
              "description": "Slot for custom content related to the day in the month view.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-calendar-month-day#slots",
              "vue-properties": [
                {
                  "name": "title",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCard",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCard"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "image",
              "description": "Apply a specific background image to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "flat",
              "description": "Removes the card's elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hover",
              "description": "Applies **4dp** of elevation when hovered (default 2dp). You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "link",
              "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends a [v-icon](/components/icons/) component to the header.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "actions",
              "description": "The slot used for the card actions; located at the bottom of the card.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "image",
              "description": "The slot used for the card image. This is used with the [image](#props-image) prop.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-card#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardActions",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardActions"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-actions",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-actions#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-item",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content.",
              "doc-url": "https://vuetifyjs.com/api/v-card-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardSubtitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardSubtitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-subtitle",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-card-subtitle#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-subtitle#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardText",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardText"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-text",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-card-text#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-text#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCardTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCardTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-card-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-card-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-card-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCarousel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCarousel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-carousel",
          "attributes": [
            {
              "name": "color",
              "description": "Applies a color to the navigation dots - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "cycle",
              "description": "Determines if the carousel should cycle through images.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "delimiterIcon",
              "description": "Sets icon for carousel delimiter.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'$delimiter'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "500",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hideDelimiters",
              "description": "Hides the carousel's bottom delimiters.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDelimiterBackground",
              "description": "Hides the bottom delimiter background.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "interval",
              "description": "The duration between image cycles. Requires the **cycle** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "6000",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "progress",
              "description": "Displays a carousel progress bar. Requires the **cycle** prop and **interval**.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "continuous",
              "description": "Determines whether carousel is continuous.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "nextIcon",
              "description": "The displayed icon for forcing pagination to the next item.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prevIcon",
              "description": "The displayed icon for forcing pagination to the previous item.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "reverse",
              "description": "Reverse the normal transition direction.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showArrows",
              "description": "Displays arrows for next/previous navigation.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "touch",
              "description": "Provide a custom **left** and **right** function when swiped left or right.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "boolean | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/directives/touch/index.ts#L9-L17\" target=\"_blank\">TouchHandlers</a>"
              }
            },
            {
              "name": "direction",
              "description": "The transition direction when changing windows.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'v-window-item--active'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "verticalDelimiters",
              "description": "Displays carousel delimiters vertically.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'left' | 'right'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean | undefined> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string | undefined>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean | undefined; }[]>; disabled: Ref<boolean | undefined>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "additional",
              "description": "Slot for additional content at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean | undefined> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string | undefined>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean | undefined; }[]>; disabled: Ref<boolean | undefined>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Slot displaying the arrow switching to the previous item.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: any; class: string; onClick: () => void; 'aria-label': string }"
                }
              ]
            },
            {
              "name": "next",
              "description": "Slot displaying the arrow switching to the next item.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: any; class: string; onClick: () => void; 'aria-label': string }"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, any>"
                },
                {
                  "name": "item",
                  "type": "{ id: number; value: unknown; disabled: boolean }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCarouselItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCarouselItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-carousel-item",
          "attributes": [
            {
              "name": "alt",
              "description": "Alternate text for screen readers. Leave empty for decorative images.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "cover",
              "description": "Resizes the background image to cover the entire container.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "draggable",
              "description": "Controls the `draggable` behavior of the image. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "boolean | 'true' | 'false'"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "gradient",
              "description": "The gradient to apply to the image. This can be any valid CSS gradient declaration. You can find more information on the [MDN documentation for gradients](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lazySrc",
              "description": "Something to show while waiting for the main image to load, typically a small base64-encoded thumbnail. Has a slight blur filter applied.\n\nUse [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader) to generate automatically. NOTE: This prop has no effect unless either `height` or `aspect-ratio` are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "options",
              "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "{\n  root: undefined,\n  rootMargin: undefined,\n  threshold: undefined\n}",
              "value": {
                "kind": "expression",
                "type": "IntersectionObserverInit"
              }
            },
            {
              "name": "sizes",
              "description": "For use with `srcset`, see [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "src",
              "description": "The image URL. This prop is mandatory.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "",
              "value": {
                "kind": "expression",
                "type": "| string\n  | { src: string; srcset: string; lazySrc: string; aspect: number }"
              }
            },
            {
              "name": "srcset",
              "description": "A set of alternate images to use based on device size. [Read more...](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "position",
              "description": "Applies [object-position](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) styles to the image and placeholder elements.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "aspectRatio",
              "description": "Calculated as `width/height`, so for a 1920x1080px image this will be `1.7778`. Will be calculated automatically if omitted.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "contentClass",
              "description": "Apply a custom class to the internal content element.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Display as an inline element instead of a block, also disables flex-grow.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "transition",
              "description": "The transition to use when switching from `lazy-src` to `src`. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "crossorigin",
              "description": "Specify that images should be fetched with CORS enabled [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#crossorigin)",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "'' | 'anonymous' | 'use-credentials'"
              }
            },
            {
              "name": "referrerpolicy",
              "description": "Define which referrer is sent when fetching the resource [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#referrerpolicy)",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "| 'no-referrer'\n  | 'no-referrer-when-downgrade'\n  | 'origin'\n  | 'origin-when-cross-origin'\n  | 'same-origin'\n  | 'strict-origin'\n  | 'strict-origin-when-cross-origin'\n  | 'unsafe-url'"
              }
            },
            {
              "name": "reverseTransition",
              "description": "Sets the reverse transition.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Prevents the item from becoming active when using the \"next\" and \"prev\" buttons or the `toggle` method.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            },
            {
              "name": "placeholder",
              "description": "Display an overlay while the image is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            },
            {
              "name": "error",
              "description": "Will be shown if the image fails to load, replacing the placeholder slot.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            },
            {
              "name": "sources",
              "description": "A list of `<source>` elements. If this slot is used v-img will render a `<picture>` instead of `<img>`.",
              "doc-url": "https://vuetifyjs.com/api/v-carousel-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCheckbox",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCheckbox"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-checkbox",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "| 'input'\n  | 'blur'\n  | 'submit'\n  | 'input lazy'\n  | 'blur lazy'\n  | 'submit lazy'\n  | 'lazy input'\n  | 'lazy blur'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "indeterminate",
              "description": "Sets an indeterminate state for the checkbox.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "indeterminateIcon",
              "description": "The icon used when in an indeterminate state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'$checkboxIndeterminate'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'$checkboxOff'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "'$checkboxOn'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Changes expected model to an array.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<boolean>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "inputNode",
                  "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                },
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCheckboxBtn",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCheckboxBtn"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "indeterminate",
              "description": "Puts the control in an indeterminate state. Used with the [indeterminate-icon](#props-indeterminate-icon) property.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "indeterminateIcon",
              "description": "Icon used when the component is in an indeterminate state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'$checkboxIndeterminate'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Puts children inputs into a row.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'$checkboxOff'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'$checkboxOn'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:indeterminate",
              "description": "Event that is emitted when the component's indeterminate state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#slots",
              "vue-properties": [
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-checkbox-btn#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<boolean>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "inputNode",
                  "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                },
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VChip",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VChip"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-chip",
          "attributes": [
            {
              "name": "label",
              "description": "Applies a medium size border radius.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "filter",
              "description": "Displays a selection icon when selected.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "closable",
              "description": "Adds remove button and then a chip can be closed.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeIcon",
              "description": "Change the default icon used for **close** chips.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'$delete'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "closeLabel",
              "description": "Text used for *aria-label* on the close button in **close** chips. Can also be customized globally in [Internationalization](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "draggable",
              "description": "Makes the chip draggable.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "filterIcon",
              "description": "Change the default icon used for **filter** chips.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'$complete'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "link",
              "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "pill",
              "description": "Remove `v-avatar` padding.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "value",
              "description": "The value used when a child of a [v-chip-group](/components/chip-groups).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'span'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#props",
              "default": "'tonal'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Emitted when component is clicked, toggles chip if contained in a chip group - Will trigger component to ripple when clicked unless the `.native` modifier is used.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent | KeyboardEvent]\n"
                }
              ]
            },
            {
              "name": "clickOnce",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VChip.json))",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:close",
              "description": "Emitted when close icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "selectedClass",
                  "type": "boolean | (string)[]"
                },
                {
                  "name": "select",
                  "type": "((value: boolean) => void)"
                },
                {
                  "name": "toggle",
                  "type": "(() => void)"
                },
                {
                  "name": "value",
                  "type": "unknown"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "close",
              "description": "Slot for icon used in **close** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            },
            {
              "name": "filter",
              "description": "Slot for icon used in **filter** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-chip#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VChipGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VChipGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-chip-group",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/).",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "column",
              "description": "Remove horizontal pagination and wrap items as needed.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "filter",
              "description": "Applies an checkmark icon in front of every chip for using it like a filter.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "centerActive",
              "description": "Forces the selected chip to be centered.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "direction",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VSlideGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "nextIcon",
              "description": "Specify the icon to use for the next icon.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prevIcon",
              "description": "Specify the icon to use for the prev icon.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "showArrows",
              "description": "Force the display of the pagination arrows.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "mobileBreakpoint",
              "description": "Sets the designated mobile breakpoint for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'v-chip--selected'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#props",
              "default": "'tonal'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-chip-group#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "selected",
                  "type": "number[]"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VClassIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VClassIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-class-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-class-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-class-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCode",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCode"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-code",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-code#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-code#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCol",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCol"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-col",
          "attributes": [
            {
              "name": "cols",
              "description": "Sets the default number of columns the component extends. Available options are: **1 -> 12** and **auto**.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "sm",
              "description": "Changes the number of columns on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "md",
              "description": "Changes the number of columns on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "lg",
              "description": "Changes the number of columns on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "xl",
              "description": "Changes the number of columns on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "xxl",
              "description": "Changes the number of columns on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "offset",
              "description": "Sets the default offset for the column.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "offsetSm",
              "description": "Changes the offset of the component on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "offsetMd",
              "description": "Changes the offset of the component on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "offsetLg",
              "description": "Changes the offset of the component on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "offsetXl",
              "description": "Changes the offset of the component on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "offsetXxl",
              "description": "Changes the offset of the component on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "order",
              "description": "Sets the default [order](https://developer.mozilla.org/en-US/docs/Web/CSS/order) for the column.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "orderSm",
              "description": "Changes the order of the component on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "orderMd",
              "description": "Changes the order of the component on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "orderLg",
              "description": "Changes the order of the component on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "orderXl",
              "description": "Changes the order of the component on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "orderXxl",
              "description": "Changes the order of the component on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "alignSelf",
              "description": "Applies the [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items) css property. Available options are: **start**, **center**, **end**, **auto**, **baseline** and **stretch**.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'auto' | 'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-col#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-col#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VColorPicker",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VColorPicker"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-color-picker",
          "attributes": [
            {
              "name": "canvasHeight",
              "description": "Height of canvas.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "150",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "dotSize",
              "description": "Changes the size of the selection dot on the canvas.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hideCanvas",
              "description": "Hides canvas.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideSliders",
              "description": "Hides sliders.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideInputs",
              "description": "Hides inputs.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "The current selected input type. Syncable with `v-model:mode`.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "'rgba'",
              "value": {
                "kind": "expression",
                "type": "'rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa'"
              }
            },
            {
              "name": "modes",
              "description": "Sets available input types.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "['rgb', 'rgba', 'hsl', 'hsla', 'hex', 'hexa']",
              "value": {
                "kind": "expression",
                "type": "('rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa')[]"
              }
            },
            {
              "name": "showSwatches",
              "description": "Displays color swatches.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "swatchesMaxHeight",
              "description": "Sets the maximum height of the swatches section.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "150",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | Record<string, unknown>"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "width",
              "description": "Sets the width of the color picker.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "swatches",
              "description": "Sets the available color swatches to select from. 2D array of rows and columns, accepts any color format the picker does.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#props",
              "value": {
                "kind": "expression",
                "type": "(\n  | string\n  | number\n  | {\n      readonly h: number\n      readonly s: number\n      readonly v: number\n      readonly a?: number | undefined\n    }\n  | {\n      readonly r: number\n      readonly g: number\n      readonly b: number\n      readonly a?: number | undefined\n    }\n  | {\n      readonly h: number\n      readonly s: number\n      readonly l: number\n      readonly a?: number | undefined\n    }\n)[][]"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:mode",
              "description": "Selected mode.",
              "doc-url": "https://vuetifyjs.com/api/v-color-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "['rgb' | 'rgba' | 'hsl' | 'hsla' | 'hex' | 'hexa']\n"
                }
              ]
            }
          ],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCombobox",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCombobox"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-combobox",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "autoSelectFirst",
              "description": "When searching, will always highlight the first option and select it on blur. `exact` will only highlight and select exact matches.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'exact'"
              }
            },
            {
              "name": "clearOnSelect",
              "description": "Reset the search text when a selection is made while using the **multiple** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Sets input type.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "filterMode",
              "description": "Controls how the results of `customFilter` and `customKeyFilter` are combined. All modes only apply `customFilter` to columns not specified in `customKeyFilter`.\n\n- **some**: There is at least one match from either the custom filter or the custom key filter.\n- **every**: All columns match either the custom filter or the custom key filter.\n- **union**: There is at least one match from the custom filter, or all columns match the custom key filters.\n- **intersection**: There is at least one match from the custom filter, and all columns match the custom key filters.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'some' | 'every' | 'union' | 'intersection'"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customFilter",
              "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "flat",
              "description": "Removes box shadow when using a variant with elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object. `customFilter` is skipped for columns with `customKeyFilter` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "['title']",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "chips",
              "description": "Changes display of selections to chips.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closableChips",
              "description": "Enables the [closable](/api/v-chip/#props-closable) prop on all [v-chip](/components/chips/) components.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeText",
              "description": "Text set to to the inputs `aria-label` and `title` when input menu is closed.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "openText",
              "description": "Text set to to the inputs **aria-label** and **title** when input menu is open.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$vuetify.open'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideSelected",
              "description": "Do not display in the select menu items that are already selected.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "listProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/Select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "items",
              "description": "Can be an array of objects or strings. By default objects should have **title** and **value** properties, and can optionally have a **props** property containing any [VListItem props](/api/v-list-item/#props). Keys to use for these can be changed with the **item-title**, **item-value**, and **item-props** props.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L72-L76\" target=\"_blank\">SelectItemKey</a>"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "menu",
              "description": "Renders with the menu open by default.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "menuIcon",
              "description": "Sets the the spin icon.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$dropdown'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "menuProps",
              "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [v-menu](/api/v-menu/#props) props, camelCase keys are recommended.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "openOnClear",
              "description": "Open's the menu whenever the clear icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "itemColor",
              "description": "Sets color of selected items.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "The role attribute applied to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'combobox'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "| 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clearable** prop is set to true.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "number | ((value: any) => number)"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "delimiters",
              "description": "Accepts an array of strings that will trigger a new tag when typing. Does not replace the normal Tab and Enter keys.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#props",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:search",
              "description": "Event emitted when the search value changes.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "update:menu",
              "description": "Event that is emitted when the component's menu state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance. The root element of this slot must be a **v-list-item** with `v-bind=\"props\"` applied. `props` includes everything required for the default select list behaviour - including title, value, click handlers, virtual scrolling, and anything else that has been added with `item-props`.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "chip",
              "description": "Slot for custom chip when using the [chip](#property-chip) prop.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "selection",
              "description": "Define a custom selection appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "prepend-item",
              "description": "Adds an item before menu content.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "append-item",
              "description": "Adds an item after menu content.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-combobox#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VComponentIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VComponentIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-component-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-component-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-component-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-component-icon#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VConfirmEdit",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VConfirmEdit"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-confirm-edit",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "cancelText",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VConfirmEdit.json))",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#props",
              "default": "'$vuetify.confirmEdit.cancel'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "okText",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VConfirmEdit.json))",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#props",
              "default": "'$vuetify.confirmEdit.ok'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "save",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VConfirmEdit.json))",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "cancel",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VConfirmEdit.json))",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-confirm-edit#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "Ref<unknown>"
                },
                {
                  "name": "actions",
                  "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VContainer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VContainer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-container",
          "attributes": [
            {
              "name": "fluid",
              "description": "Removes viewport maximum-width size breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-container#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-container#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-container#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VCounter",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VCounter"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-counter",
          "attributes": [
            {
              "name": "active",
              "description": "Determines whether the counter is visible or not.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum allowed value.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "value",
              "description": "Sets the current counter value.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#props",
              "default": "{component: {name: 'slide-y-transition'}}",
              "value": {
                "kind": "expression",
                "type": "| { component: Component }\n  | string\n  | boolean\n  | (TransitionProps & { component: Component })"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-counter#slots",
              "vue-properties": [
                {
                  "name": "counter",
                  "type": "string"
                },
                {
                  "name": "max",
                  "type": "string | number"
                },
                {
                  "name": "value",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataIterator",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataIterator"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-iterator",
          "attributes": [
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "If `true` and no items are provided, then a loading text will be shown.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L72-L76\" target=\"_blank\">SelectItemKey</a>"
              }
            },
            {
              "name": "itemSelectable",
              "description": "Property on supplied `items` that contains the boolean value indicating if the item is selectable.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L72-L76\" target=\"_blank\">SelectItemKey</a>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showSelect",
              "description": "Shows the column with checkboxes for selecting items in the list.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectStrategy",
              "description": "Defines the strategy of selecting items in the list. Possible values are: 'single' (only one item can be selected at a time), 'page' ('Select all' button will select only items on the current page), 'all' ('Select all' button will select all items in the list).",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'single' | 'page' | 'all'"
              }
            },
            {
              "name": "page",
              "description": "The current displayed page number (1-indexed).",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "sortBy",
              "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "multiSort",
              "description": "If `true` then one can sort on multiple properties.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mustSort",
              "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customKeySort",
              "description": "Function used on specific keys within the item object. `customSort` is skipped for columns with `customKeySort` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "itemsPerPage",
              "description": "Changes how many items per page should be visible. Can be used with `.sync` modifier. Setting this prop to `-1` will display all items on the page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "5",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "expandOnClick",
              "description": "Expands item when the row is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showExpand",
              "description": "Shows the expand icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "expanded",
              "description": "Array of expanded items. Can be used with `.sync` modifier.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            },
            {
              "name": "groupBy",
              "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "filterMode",
              "description": "Controls how the results of `customFilter` and `customKeyFilter` are combined. All modes only apply `customFilter` to columns not specified in `customKeyFilter`.\n\n- **some**: There is at least one match from either the custom filter or the custom key filter.\n- **every**: All columns match either the custom filter or the custom key filter.\n- **union**: There is at least one match from the custom filter, or all columns match the custom key filters.\n- **intersection**: There is at least one match from the custom filter, and all columns match the custom key filters.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customFilter",
              "description": "Function to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object. `customFilter` is skipped for columns with `customKeyFilter` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any[]]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "The `.sync` event for `groupBy` prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:page",
              "description": "The `.sync` event for `page` prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:itemsPerPage",
              "description": "The `.sync` event for `itemsPerPage` prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "The `.sync` event for `sortBy` prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "The `.sync` event for `options` prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:expanded",
              "description": "The `.sync` event for `expanded` prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:currentItems",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataIterator.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default slot. Use this to render your items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "prevPage",
                  "type": "() => void"
                },
                {
                  "name": "nextPage",
                  "type": "() => void"
                },
                {
                  "name": "setPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                }
              ]
            },
            {
              "name": "header",
              "description": "Defines a header above the items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "prevPage",
                  "type": "() => void"
                },
                {
                  "name": "nextPage",
                  "type": "() => void"
                },
                {
                  "name": "setPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                }
              ]
            },
            {
              "name": "footer",
              "description": "Defines a footer below the items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "prevPage",
                  "type": "() => void"
                },
                {
                  "name": "nextPage",
                  "type": "() => void"
                },
                {
                  "name": "setPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataIterator/composables/items.ts#L18-L20\" target=\"_blank\">DataIteratorItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-iterator#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTable",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTable"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table",
          "attributes": [
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "headerProps",
              "description": "Pass props to the default header. See [`v-data-table-header` API](/api/v-data-table-header) for more information.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "cellProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/DataTable-items.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<\n        ItemKeySlot<any>,\n        'value' | 'item' | 'index' | 'internalItem' | 'column'\n      >,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "headers",
              "description": "An array of objects that each describe a header column. See the example below for a definition of all properties.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "{\n  readonly key?:\n    | 'data-table-group'\n    | 'data-table-select'\n    | 'data-table-expand'\n    | (string & {})\n    | undefined\n  readonly value?: SelectItemKey\n  readonly title?: string | undefined\n  readonly fixed?: boolean | undefined\n  readonly align?: 'start' | 'end' | 'center' | undefined\n  readonly width?: string | number | undefined\n  readonly minWidth?: string | undefined\n  readonly maxWidth?: string | undefined\n  readonly headerProps?: { readonly [x: string]: any } | undefined\n  readonly cellProps?:\n    | { readonly [x: string]: any }\n    | ((\n        data: Pick<\n          ItemKeySlot<any>,\n          'value' | 'item' | 'index' | 'internalItem'\n        >,\n      ) => Record<string, any>)\n    | undefined\n  readonly sortable?: boolean | undefined\n  readonly sort?: DataTableCompareFunction<any> | undefined\n  readonly sortRaw?: DataTableCompareFunction<any> | undefined\n  readonly filter?: FilterFunction | undefined\n  readonly children?: readonly any[] | undefined\n}[]"
              }
            },
            {
              "name": "page",
              "description": "The current displayed page number (1-indexed).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "itemsPerPage",
              "description": "Changes how many items per page should be visible. Can be used with `.sync` modifier. Setting this prop to `-1` will display all items on the page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "loadingText",
              "description": "Text shown when the data is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "rowProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/DataTable-items.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<ItemKeySlot<any>, 'item' | 'index' | 'internalItem'>,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "expandOnClick",
              "description": "Expands item when the row is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showExpand",
              "description": "Shows the expand toggle in default rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "expanded",
              "description": "Whether the item is expanded or not.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            },
            {
              "name": "groupBy",
              "description": "Changes which item property should be used for grouping items. Currently only supports a single grouping in the format: `group` or `['group']`. When using an array, only the first element is considered. Can be used with `.sync` modifier.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemSelectable",
              "description": "Property on supplied `items` that indicates whether the item is selectable.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showSelect",
              "description": "Shows the select checkboxes in both the header and rows (if using default rows).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectStrategy",
              "description": "Defines the strategy of selecting items in the list. Possible values are: 'single' (only one item can be selected at a time), 'page' ('Select all' button will select only items on the current page), 'all' ('Select all' button will select all items in the list).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'page' | 'single' | 'all'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "sortBy",
              "description": "Changes which item property (or properties) should be used for sort order. Can be used with `.sync` modifier.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "multiSort",
              "description": "If `true` then one can sort on multiple properties.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mustSort",
              "description": "If `true` then one can not disable sorting, it will always switch between ascending and descending.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customKeySort",
              "description": "Function used on specific keys within the item object. `customSort` is skipped for columns with `customKeySort` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "sticky",
              "description": "Sticks the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sortAscIcon",
              "description": "Icon used for ascending sort button.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$sortAsc'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "sortDescIcon",
              "description": "Icon used for descending sort button.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$sortDesc'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Fixed header to top of table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "fixedFooter",
              "description": "Use the fixed-footer prop together with the height prop to fix the footer to the bottom of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Set an explicit height of table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hover",
              "description": "Adds a hover effects to a table rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height of the table rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "filterMode",
              "description": "Controls how the results of `customFilter` and `customKeyFilter` are combined. All modes only apply `customFilter` to columns not specified in `customKeyFilter`.\n\n- **some**: There is at least one match from either the custom filter or the custom key filter.\n- **every**: All columns match either the custom filter or the custom key filter.\n- **union**: There is at least one match from the custom filter, or all columns match the custom key filters.\n- **intersection**: There is at least one match from the custom filter, and all columns match the custom key filters.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customFilter",
              "description": "Function to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object. `customFilter` is skipped for columns with `customKeyFilter` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "prevIcon",
              "description": "Previous icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextIcon",
              "description": "Next icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "firstIcon",
              "description": "First icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$first'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lastIcon",
              "description": "Last icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$last'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemsPerPageText",
              "description": "Text for items-per-page dropdown.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.itemsPerPageText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "pageText",
              "description": "Label for page number.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.pageText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "firstPageLabel",
              "description": "Label for first page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.firstPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevPageLabel",
              "description": "Label for previous page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.prevPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextPageLabel",
              "description": "Label for next page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.nextPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lastPageLabel",
              "description": "Label for last page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "'$vuetify.dataFooter.lastPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemsPerPageOptions",
              "description": "Array of options to show in the items-per-page dropdown.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "[\n  {value: 10, title: '10'},\n  {value: 25, title: '25'},\n  {value: 50, title: '50'},\n  {value: 100, title: '100'},\n  {value: -1, title: '$vuetify.dataFooter.itemsPerPageAll'}\n]",
              "value": {
                "kind": "expression",
                "type": "(number | { title: string; value: number })[]"
              }
            },
            {
              "name": "showCurrentPage",
              "description": "Show current page number between prev/next icons.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [
            {
              "name": "update:expanded",
              "description": "Emits when the **expanded** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Emits when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:page",
              "description": "Emits when the **page** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:itemsPerPage",
              "description": "Emits when the **items-per-page** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "Emits when the **sortBy** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "Emits when one of the **options** properties is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "Emits when the **group-by** property of the **options** property is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:currentItems",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTable.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "Slot for custom rendering of a group.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "Slot for custom rendering of a header cell with the select checkbox.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "Slot to replace the default `v-simple-checkbox` used when selecting rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "item.data-table-expand",
              "description": "Slot to replace the default `v-icon` used when expanding rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "item",
              "description": "Slot to replace the default rendering of a row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "loading",
              "description": "Defines content for when `loading` is true and no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "group-header",
              "description": "Slot for custom rendering of a group header.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "expanded-row",
              "description": "Slot for custom rendering of an expanded row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "headers",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L25-L35.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "header.data-table-select",
              "description": "Slot to replace the default `v-simple-checkbox` in header.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            },
            {
              "name": "header.data-table-expand",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "colgroup",
              "description": "Slot to replace the default rendering of the `<colgroup>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "top",
              "description": "Slot to add content above the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body",
              "description": "Slot to replace the default table `<tbody>`.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tbody",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTable.tsx#L35-L57.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "thead",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTable.tsx#L35-L57.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tfoot",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTable.tsx#L35-L57.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "bottom",
              "description": "Slot for custom rendering of a data table footer.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body.prepend",
              "description": "Prepends elements to the start of the default table `<tbody>`.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body.append",
              "description": "Appends elements to the end of the default table `<tbody>`.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "footer.prepend",
              "description": "Adds content to the empty space in the footer.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "[`item.${string}`]",
              "description": "Slot for custom rendering of a row cell.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots"
            },
            {
              "name": "[`header.${string}`]",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableFooter",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableFooter"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-footer",
          "attributes": [],
          "events": [],
          "slots": [
            {
              "name": "[string]",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableFooter.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-footer#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableRow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableRow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-row",
          "attributes": [
            {
              "name": "cellProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableRow.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<\n        ItemKeySlot<unknown>,\n        'value' | 'index' | 'item' | 'internalItem' | 'column'\n      >,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "index",
              "description": "Row index.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "item",
              "description": "Data (key, index and column values) of the displayed item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Event that is emitted when the component is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "contextmenu",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableRow.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "dblclick",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableRow.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "item.data-table-select",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/typescript/lib/lib.es5.d.ts#L7-L7.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#slots"
            },
            {
              "name": "item.data-table-expand",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/typescript/lib/lib.es5.d.ts#L7-L7.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#slots"
            },
            {
              "name": "[`item.${string}`]",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/types.ts#L78-L81.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-row#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableRows",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableRows"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-rows",
          "attributes": [
            {
              "name": "cellProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableRows.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<\n        ItemKeySlot<any>,\n        'value' | 'item' | 'index' | 'internalItem' | 'column'\n      >,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "loading",
              "description": "Displays `loading` slot if set to `true`",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "loadingText",
              "description": "Text shown when the data is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "rowProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableRows.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<ItemKeySlot<any>, 'item' | 'index' | 'internalItem'>,\n    ) => Record<string, any>)"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "data-table-group",
              "description": "Slot for custom rendering of a group.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "Slot for custom rendering of a header cell with the select checkbox.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "Slot for custom rendering of a row cell with the select checkbox.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "item.data-table-expand",
              "description": "Slot for custom rendering of a row cell with the expand icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "loading",
              "description": "Slot for custom rendering of the loading state.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "group-header",
              "description": "Slot for custom rendering of a group header.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "expanded-row",
              "description": "Slot for custom rendering of an expanded row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            },
            {
              "name": "[`item.${string}`]",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/types.ts#L78-L81.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-rows#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableServer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableServer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-server",
          "attributes": [
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "headerProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableHeaders.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "cellProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/DataTable-items.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<\n        ItemKeySlot<any>,\n        'value' | 'item' | 'index' | 'internalItem' | 'column'\n      >,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "headers",
              "description": "An array of objects that each describe a header column.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "{\n  readonly key?:\n    | 'data-table-group'\n    | 'data-table-select'\n    | 'data-table-expand'\n    | (string & {})\n    | undefined\n  readonly value?: SelectItemKey\n  readonly title?: string | undefined\n  readonly fixed?: boolean | undefined\n  readonly align?: 'start' | 'end' | 'center' | undefined\n  readonly width?: string | number | undefined\n  readonly minWidth?: string | undefined\n  readonly maxWidth?: string | undefined\n  readonly headerProps?: { readonly [x: string]: any } | undefined\n  readonly cellProps?:\n    | { readonly [x: string]: any }\n    | ((\n        data: Pick<\n          ItemKeySlot<any>,\n          'value' | 'item' | 'index' | 'internalItem'\n        >,\n      ) => Record<string, any>)\n    | undefined\n  readonly sortable?: boolean | undefined\n  readonly sort?: DataTableCompareFunction<any> | undefined\n  readonly sortRaw?: DataTableCompareFunction<any> | undefined\n  readonly filter?: FilterFunction | undefined\n  readonly children?: readonly any[] | undefined\n}[]"
              }
            },
            {
              "name": "itemsLength",
              "description": "Number of all items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "page",
              "description": "The current displayed page number (1-indexed).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "itemsPerPage",
              "description": "The number of items to display on each page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "loadingText",
              "description": "Text shown when the data is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "rowProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/DataTable-items.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<ItemKeySlot<any>, 'item' | 'index' | 'internalItem'>,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "expandOnClick",
              "description": "Expands item when the row is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showExpand",
              "description": "Shows the expand icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "expanded",
              "description": "Whether the item is expanded or not.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            },
            {
              "name": "groupBy",
              "description": "Defines the grouping of the table items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemSelectable",
              "description": "Property on supplied `items` that indicates whether the item is selectable.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showSelect",
              "description": "Shows the column with checkboxes for selecting items in the list.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectStrategy",
              "description": "Defines the strategy of selecting items in the list. Possible values are: 'single' (only one item can be selected at a time), 'page' ('Select all' button will select only items on the current page), 'all' ('Select all' button will select all items in the list).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'page' | 'single' | 'all'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "sortBy",
              "description": "Array of column keys and sort orders that determines the sort order of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "multiSort",
              "description": "Allows sorting by multiple columns.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mustSort",
              "description": "Forces sorting on the column(s).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customKeySort",
              "description": "Function used on specific keys within the item object. `customSort` is skipped for columns with `customKeySort` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "sticky",
              "description": "Sticks the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sortAscIcon",
              "description": "Icon used for ascending sort button.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$sortAsc'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "sortDescIcon",
              "description": "Icon used for descending sort button.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$sortDesc'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Use the fixed-header prop together with the height prop to fix the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "fixedFooter",
              "description": "Use the fixed-footer prop together with the height prop to fix the footer to the bottom of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Use the height prop to set the height of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hover",
              "description": "Will add a hover effect to a table's row when the mouse is over it.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevIcon",
              "description": "Previous icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextIcon",
              "description": "Next icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "firstIcon",
              "description": "First icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$first'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lastIcon",
              "description": "Last icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$last'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemsPerPageText",
              "description": "Text for items-per-page dropdown.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.itemsPerPageText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "pageText",
              "description": "Label for page number.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.pageText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "firstPageLabel",
              "description": "Label for first page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.firstPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevPageLabel",
              "description": "Label for previous page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.prevPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextPageLabel",
              "description": "Label for next page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.nextPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lastPageLabel",
              "description": "Label for last page.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "'$vuetify.dataFooter.lastPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemsPerPageOptions",
              "description": "Array of options to show in the items-per-page dropdown.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "[\n  {value: 10, title: '10'},\n  {value: 25, title: '25'},\n  {value: 50, title: '50'},\n  {value: 100, title: '100'},\n  {value: -1, title: '$vuetify.dataFooter.itemsPerPageAll'}\n]",
              "value": {
                "kind": "expression",
                "type": "(number | { title: string; value: number })[]"
              }
            },
            {
              "name": "showCurrentPage",
              "description": "Show current page number between prev/next icons.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [
            {
              "name": "update:expanded",
              "description": "Emits when the **expanded** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Emits when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:page",
              "description": "Emits when the **page** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:itemsPerPage",
              "description": "Emits when the **items-per-page** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "Emits when the **sort-by** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "Emits when one of the **options** properties is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "Emits when the **group-by** property of the **options** property is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "Slot for custom rendering of a group.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "Slot for custom rendering of a header cell with the select checkbox.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "Slot to replace the default checkbox used when selecting rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "item.data-table-expand",
              "description": "Slot to replace the default `v-icon` used when expanding rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "item",
              "description": "Slot to replace the default rendering of a row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "loading",
              "description": "Defines content for when `loading` is true and no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "group-header",
              "description": "Slot for custom rendering of a group header.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "expanded-row",
              "description": "Slot for custom rendering of an expanded row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "headers",
              "description": "Slot to replace the default rendering of the `<thead>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "header.data-table-select",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            },
            {
              "name": "header.data-table-expand",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "colgroup",
              "description": "Slot to replace the default rendering of the `<colgroup>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "top",
              "description": "Slot to add content above the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body",
              "description": "Slot to replace the default rendering of the `<tbody>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tbody",
              "description": "Slot to replace the default rendering of the `<tbody>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "thead",
              "description": "Slot to replace the default rendering of the `<thead>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "tfoot",
              "description": "Slot to replace the default rendering of the `<tfoot>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "bottom",
              "description": "Slot to add content below the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body.prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTable.tsx#L35-L57.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "body.append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTable.tsx#L35-L57.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "page",
                  "type": "number"
                },
                {
                  "name": "itemsPerPage",
                  "type": "number"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "pageCount",
                  "type": "number"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "setItemsPerPage",
                  "type": "(value: number) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                }
              ]
            },
            {
              "name": "footer.prepend",
              "description": "Adds content to the empty space in the footer.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "[`item.${string}`]",
              "description": "Slot for custom rendering of a row cell.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots"
            },
            {
              "name": "[`header.${string}`]",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-server#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDataTableVirtual",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDataTableVirtual"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual",
          "attributes": [
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "headerProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDataTableHeaders.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "cellProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/DataTable-items.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<\n        ItemKeySlot<any>,\n        'value' | 'item' | 'index' | 'internalItem' | 'column'\n      >,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "headers",
              "description": "An array of objects that each describe a header column.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "{\n  readonly key?:\n    | 'data-table-group'\n    | 'data-table-select'\n    | 'data-table-expand'\n    | (string & {})\n    | undefined\n  readonly value?: SelectItemKey\n  readonly title?: string | undefined\n  readonly fixed?: boolean | undefined\n  readonly align?: 'start' | 'end' | 'center' | undefined\n  readonly width?: string | number | undefined\n  readonly minWidth?: string | undefined\n  readonly maxWidth?: string | undefined\n  readonly headerProps?: { readonly [x: string]: any } | undefined\n  readonly cellProps?:\n    | { readonly [x: string]: any }\n    | ((\n        data: Pick<\n          ItemKeySlot<any>,\n          'value' | 'item' | 'index' | 'internalItem'\n        >,\n      ) => Record<string, any>)\n    | undefined\n  readonly sortable?: boolean | undefined\n  readonly sort?: DataTableCompareFunction<any> | undefined\n  readonly sortRaw?: DataTableCompareFunction<any> | undefined\n  readonly filter?: FilterFunction | undefined\n  readonly children?: readonly any[] | undefined\n}[]"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "loadingText",
              "description": "Text shown when the data is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$vuetify.dataIterator.loadingText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "rowProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/DataTable-items.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "| Record<string, any>\n  | ((\n      data: Pick<ItemKeySlot<any>, 'item' | 'index' | 'internalItem'>,\n    ) => Record<string, any>)"
              }
            },
            {
              "name": "search",
              "description": "Text input used to filter items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "expandOnClick",
              "description": "Expands item when the row is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showExpand",
              "description": "Shows the expand icon.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "expanded",
              "description": "Whether the item is expanded or not.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            },
            {
              "name": "groupBy",
              "description": "Defines the grouping of the table items.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'id'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemSelectable",
              "description": "Property on supplied `items` that indicates whether the item is selectable.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showSelect",
              "description": "Shows the column with checkboxes for selecting items in the list.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectStrategy",
              "description": "Defines the strategy of selecting items in the list. Possible values are: 'single' (only one item can be selected at a time), 'page' ('Select all' button will select only items on the current page), 'all' ('Select all' button will select all items in the list).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'page'",
              "value": {
                "kind": "expression",
                "type": "'single' | 'page' | 'all'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "sortBy",
              "description": "Array of column keys and sort orders that determines the sort order of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
              }
            },
            {
              "name": "multiSort",
              "description": "Allows sorting by multiple columns.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mustSort",
              "description": "Forces sorting on the column(s).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customKeySort",
              "description": "Function used on specific keys within the item object. `customSort` is skipped for columns with `customKeySort` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "sticky",
              "description": "Sticks the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sortAscIcon",
              "description": "Icon used for ascending sort button.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$sortAsc'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "sortDescIcon",
              "description": "Icon used for descending sort button.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'$sortDesc'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "fixedHeader",
              "description": "Use the fixed-header prop together with the height prop to fix the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "fixedFooter",
              "description": "Use the fixed-footer prop together with the height prop to fix the footer to the bottom of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Use the height prop to set the height of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hover",
              "description": "Will add a hover effect to a table's row when the mouse is over it.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemHeight",
              "description": "Height in pixels of each item to display.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "filterMode",
              "description": "Controls how the results of `customFilter` and `customKeyFilter` are combined. All modes only apply `customFilter` to columns not specified in `customKeyFilter`.\n\n- **some**: There is at least one match from either the custom filter or the custom key filter.\n- **every**: All columns match either the custom filter or the custom key filter.\n- **union**: There is at least one match from the custom filter, or all columns match the custom key filters.\n- **intersection**: There is at least one match from the custom filter, and all columns match the custom key filters.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "'intersection'",
              "value": {
                "kind": "expression",
                "type": "'every' | 'some' | 'union' | 'intersection'"
              }
            },
            {
              "name": "noFilter",
              "description": "Disables all item filtering.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "customFilter",
              "description": "Function used to filter items, called for each filterable key on each item in the list. The first argument is the filterable value from the item, the second is the search term, and the third is the internal item object. The function should return true if the item should be included in the filtered list, or the index of the match in the value if it should be included with the result highlighted.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/filter.ts#L19-L19\" target=\"_blank\">FilterFunction</a>"
              }
            },
            {
              "name": "customKeyFilter",
              "description": "Function used on specific keys within the item object. `customFilter` is skipped for columns with `customKeyFilter` specified.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "filterKeys",
              "description": "Array of specific keys to filter on the item.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            }
          ],
          "events": [
            {
              "name": "update:expanded",
              "description": "Emits when the **expanded** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Emits when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:sortBy",
              "description": "Emits when the **sort-by** property of the **options** prop is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:options",
              "description": "Emits when one of the **options** properties is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:groupBy",
              "description": "Emits when the **group-by** property of the **options** property is updated.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "data-table-group",
              "description": "Slot for custom rendering of a group.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "count",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "data-table-select",
              "description": "Slot for custom rendering of a header cell with the select checkbox.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "item.data-table-select",
              "description": "Slot to replace the default checkbox used when selecting rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "item.data-table-expand",
              "description": "Slot to replace the default `v-icon` used when expanding rows.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "item",
              "description": "Slot to replace the default rendering of a row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "loading",
              "description": "Defines content for when `loading` is true and no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "group-header",
              "description": "Slot for custom rendering of a group header.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                }
              ]
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "expanded-row",
              "description": "Slot for custom rendering of an expanded row.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "headers",
              "description": "Slot to replace the default rendering of the `<thead>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "header.data-table-select",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            },
            {
              "name": "header.data-table-expand",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            },
            {
              "name": "colgroup",
              "description": "Slot to replace the default rendering of the `<colgroup>` element.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "top",
              "description": "Slot to add content above the table",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "bottom",
              "description": "Slot to add content below the table.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "body.prepend",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableVirtual.tsx#L33-L39.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "body.append",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableVirtual.tsx#L33-L39.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "headers",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[][]"
                },
                {
                  "name": "items",
                  "type": "any[]"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "isExpanded",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => boolean"
                },
                {
                  "name": "toggleExpand",
                  "type": "(item: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(items: { value: any; selectable: boolean } | SelectableItem[]) => boolean"
                },
                {
                  "name": "toggleSelect",
                  "type": "(item: { value: any; selectable: boolean }) => void"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(items: SelectableItem[], value: boolean) => void"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isGroupOpen",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => boolean"
                },
                {
                  "name": "toggleGroup",
                  "type": "(group: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>) => void"
                },
                {
                  "name": "internalItems",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a>[]"
                },
                {
                  "name": "groupedItems",
                  "type": "(<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L44-L50\" target=\"_blank\">DataTableItem</a> | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/group.ts#L18-L25\" target=\"_blank\">Group</a>)[]"
                },
                {
                  "name": "columns",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>[]"
                }
              ]
            },
            {
              "name": "[`item.${string}`]",
              "description": "Slot for custom rendering of a row cell.",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots"
            },
            {
              "name": "[`header.${string}`]",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDataTable/VDataTableHeaders.tsx#L37-L46.json))",
              "doc-url": "https://vuetifyjs.com/api/v-data-table-virtual#slots",
              "vue-properties": [
                {
                  "name": "column",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>"
                },
                {
                  "name": "selectAll",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "isSorted",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => boolean"
                },
                {
                  "name": "toggleSort",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => void"
                },
                {
                  "name": "sortBy",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/composables/sort.ts#L29-L29\" target=\"_blank\">SortItem</a>[]"
                },
                {
                  "name": "someSelected",
                  "type": "boolean"
                },
                {
                  "name": "allSelected",
                  "type": "boolean"
                },
                {
                  "name": "getSortIcon",
                  "type": "(column: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VDataTable/types.ts#L33-L42\" target=\"_blank\">InternalDataTableHeader</a>) => any"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDatePicker",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDatePicker"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-date-picker",
          "attributes": [
            {
              "name": "header",
              "description": "Text shown when no **display-date** is set.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'$vuetify.datePicker.header'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'$vuetify.datePicker.title'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "nextIcon",
              "description": "Sets the icon for next month/year button.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevIcon",
              "description": "Sets the icon for previous month/year button.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modeIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'$subgroup'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "viewMode",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'month'",
              "value": {
                "kind": "expression",
                "type": "'month' | 'months' | 'year'"
              }
            },
            {
              "name": "month",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "year",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideWeekdays",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "range",
              "description": "Allow the selection of date range.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showWeek",
              "description": "Toggles visibility of the week numbers in the body of the calendar.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "allowedDates",
              "description": "Restricts which dates can be selected.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "Function | unknown[]"
              }
            },
            {
              "name": "showAdjacentMonths",
              "description": "Toggles visibility of days from previous and next months.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "weekdays",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "[0, 1, 2, 3, 4, 5, 6]",
              "value": {
                "kind": "expression",
                "type": "number[]"
              }
            },
            {
              "name": "displayValue",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "max",
              "description": "Maximum allowed date/month (ISO 8601 format).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "min",
              "description": "Minimum allowed date/month (ISO 8601 format).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "Allow the selection of multiple dates.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "landscape",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VPicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideHeader",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VPicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Width of the picker.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:month",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:year",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:viewMode",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#slots"
            },
            {
              "name": "actions",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#slots"
            },
            {
              "name": "header",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDatePicker/VDatePicker.tsx#L29-L32.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker#slots",
              "vue-properties": [
                {
                  "name": "header",
                  "type": "string"
                },
                {
                  "name": "transition",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDatePickerControls",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDatePickerControls"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls",
          "attributes": [
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | string[]"
              }
            },
            {
              "name": "nextIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modeIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "default": "'$subgroup'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "viewMode",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#props",
              "default": "'month'",
              "value": {
                "kind": "expression",
                "type": "'month' | 'months' | 'year'"
              }
            }
          ],
          "events": [
            {
              "name": "click:year",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:month",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:prev",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:next",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:text",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerControls.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-controls#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDatePickerHeader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDatePickerHeader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-date-picker-header",
          "attributes": [
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "header",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerHeader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerHeader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Event that is emitted when the component is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#slots"
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-header#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDatePickerMonth",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDatePickerMonth"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-date-picker-month",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideWeekdays",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "range",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showWeek",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "allowedDates",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "Function | unknown[]"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "month",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "showAdjacentMonths",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "year",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "weekdays",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "[0, 1, 2, 3, 4, 5, 6]",
              "value": {
                "kind": "expression",
                "type": "number[]"
              }
            },
            {
              "name": "displayValue",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "unknown[]"
              }
            },
            {
              "name": "max",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "min",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/calendar.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:month",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "update:year",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerMonth.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "day",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDatePicker/VDatePickerMonth.tsx#L20-L26.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-month#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ onClick: () => void }"
                },
                {
                  "name": "item",
                  "type": "any"
                },
                {
                  "name": "i",
                  "type": "number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDatePickerMonths",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDatePickerMonths"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-date-picker-months",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-months#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-months#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-months#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-months#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "month",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDatePicker/VDatePickerMonths.tsx#L17-L26.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-months#slots",
              "vue-properties": [
                {
                  "name": "month",
                  "type": "{ text: string; value: number }"
                },
                {
                  "name": "i",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "{ onClick: () => void }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDatePickerYears",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDatePickerYears"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-date-picker-years",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "min",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerYears.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "max",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VDatePickerYears.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "year",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VDatePicker/VDatePickerYears.tsx#L20-L34.json))",
              "doc-url": "https://vuetifyjs.com/api/v-date-picker-years#slots",
              "vue-properties": [
                {
                  "name": "year",
                  "type": "{ text: string; value: number }"
                },
                {
                  "name": "i",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "{ active: boolean; color: string; rounded: boolean; text: string; variant: \"flat\" | \"text\"; onClick: () => void }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDefaultsProvider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDefaultsProvider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-defaults-provider",
          "attributes": [
            {
              "name": "disabled",
              "description": "Turns off all calculations of new default values for improved performance in situations where defaults propagation isn't necessary.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "reset",
              "description": "Reset the default values up the nested chain by {n} amount.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "root",
              "description": "Force current defaults to match the application root defaults.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "scoped",
              "description": "Prevents the ability for default values to be inherited from parent components.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "defaults",
              "description": "Specify new default prop values for components. Keep in mind that this will be merged with previously defined values.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#props",
              "value": {
                "kind": "expression",
                "type": "{\n  global: Record<string, unknown>\n  [string]: Record<string, unknown>\n}"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-defaults-provider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialog",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialog"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog",
          "attributes": [
            {
              "name": "activator",
              "description": "Explicitly sets the overlay's activator.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance"
              }
            },
            {
              "name": "fullscreen",
              "description": "Changes layout for fullscreen display.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "retainFocus",
              "description": "Tab focus will return to the first child of the dialog by default. Disable this when using external tools that require focus such as TinyMCE or vue-clipboard.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrollable",
              "description": "When set to true, expects a `v-card` and a `v-card-text` component with a designated height. For more information, check out the [scrollable example](/components/dialogs#scrollable).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "contentProps",
              "description": "Apply custom properties to the content.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of a `v-dialog`'s content when using the **persistent** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing **esc** key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "2400",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "target",
              "description": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "| Element\n  | 'parent'\n  | 'cursor'\n  | (string & {})\n  | ComponentPublicInstance\n  | [number, number]"
              }
            },
            {
              "name": "activatorProps",
              "description": "Apply custom properties to the activator.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "openOnClick",
              "description": "Activate the component when the activator is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnHover",
              "description": "Designates whether component should activate when its activator is hovered.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnFocus",
              "description": "Activate the component when the activator is focused.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>"
              }
            },
            {
              "name": "location",
              "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both..",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'center center'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "Strategy used when the component is activate and user scrolls.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "'block'",
              "value": {
                "kind": "expression",
                "type": "'none' | 'close' | 'block' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "{component: {name: 'VDialogTransition'}}",
              "value": {
                "kind": "expression",
                "type": "| { component: Component }\n  | string\n  | boolean\n  | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialogBottomTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialogBottomTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-bottom-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialogTopTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialogTopTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-top-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDialogTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDialogTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-dialog-transition",
          "attributes": [
            {
              "name": "target",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/v-dialog-transition.json))",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-transition#props",
              "value": {
                "kind": "expression",
                "type": "HTMLElement | [number, number]"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-dialog-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VDivider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VDivider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-divider",
          "attributes": [
            {
              "name": "length",
              "description": "Sets the dividers length. Default unit is px.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inset",
              "description": "Adds indentation (72px) for **normal** dividers, reduces max height for **vertical**.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "thickness",
              "description": "Sets the dividers thickness. Default unit is px.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "vertical",
              "description": "Displays dividers vertically.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-divider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpandTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpandTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expand-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-expand-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-expand-transition#props",
              "default": "'in-out'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'in-out' | 'out-in'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expand-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpandXTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpandXTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition#props",
              "default": "'in-out'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'in-out' | 'out-in'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expand-x-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panel",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "value",
              "description": "Controls the opened/closed state of content.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Disables the expansion-panel content.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "expandIcon",
              "description": "Icon used when the expansion panel is in a expandable state.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "'$expand'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "collapseIcon",
              "description": "Icon used when the expansion panel is in a collapsable state.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "'$collapse'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideActions",
              "description": "Hide the expand icon in the content title.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "static",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VExpansionPanelTitle.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "readonly",
              "description": "Makes the expansion-panel content read only.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanelText",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanelText"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-text",
          "attributes": [
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-text#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-text#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanelTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanelTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "expandIcon",
              "description": "Icon used when the expansion panel is in a expandable state.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "'$expand'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "collapseIcon",
              "description": "Icon used when the expansion panel is in a collapsable state.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "'$collapse'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideActions",
              "description": "Hide the expand icon in the content title.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "static",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VExpansionPanelTitle.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "readonly",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VExpansionPanelTitle.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#slots",
              "vue-properties": [
                {
                  "name": "collapseIcon",
                  "type": "any"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "expanded",
                  "type": "boolean"
                },
                {
                  "name": "expandIcon",
                  "type": "any"
                },
                {
                  "name": "readonly",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "actions",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VExpansionPanel/VExpansionPanelTitle.tsx#L21-L27.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panel-title#slots",
              "vue-properties": [
                {
                  "name": "collapseIcon",
                  "type": "any"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "expanded",
                  "type": "boolean"
                },
                {
                  "name": "expandIcon",
                  "type": "any"
                },
                {
                  "name": "readonly",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VExpansionPanels",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VExpansionPanels"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-expansion-panels",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "static",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VExpansionPanels.json))",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'accordion' | 'inset' | 'popout'"
              }
            },
            {
              "name": "readonly",
              "description": "Makes the entire expansion-panel read only.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-expansion-panels#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFabTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFabTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-fab-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "'out-in'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#props",
              "default": "'center center'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-fab-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFadeTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFadeTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-fade-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-fade-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VField",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VField"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-field",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "flat",
              "description": "Removes box shadow when using a variant with elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clearable** prop is set to true.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'underlined'\n  | 'outlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n  | 'plain'"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-field#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-field#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                },
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFieldLabel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFieldLabel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-field-label",
          "attributes": [
            {
              "name": "floating",
              "description": "Elevates the label above the slotted content.",
              "doc-url": "https://vuetifyjs.com/api/v-field-label#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-field-label#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFileInput",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFileInput"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-file-input",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "counter",
              "description": "Displays the number of selected files.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "flat",
              "description": "Removes box shadow when using a variant with elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "chips",
              "description": "Changes display of selections to chips.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "counterSizeString",
              "description": "The text displayed when using the **counter** and **show-size** props. Can also be customized globally on the [internationalization page](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$vuetify.fileInput.counterSize'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "counterString",
              "description": "The text displayed when using the **counter** prop. Can also be customized globally on the [internationalization page](/customization/internationalization).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$vuetify.fileInput.counter'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "multiple",
              "description": "Adds the **multiple** attribute to the input, allowing multiple file selections.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showSize",
              "description": "Sets the displayed size of selected file(s). When using **true** will default to _1000_ displaying (**kB, MB, GB**) while _1024_ will display (**KiB, MiB, GiB**).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 1000 | 1024"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$file'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "File[]"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clearable** prop is set to true.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'underlined'\n  | 'outlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n  | 'plain'"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:control",
              "description": "Emitted when the main input is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "mousedown:control",
              "description": "Event that is emitted when using mousedown on the main control area.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[File[]]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "counter",
              "description": "Slot for the input’s counter text.",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots"
            },
            {
              "name": "selection",
              "description": "Slot for defining a custom appearance for selected item(s). Provides the current **index**, **text** (truncated) and [file](https://developer.mozilla.org/en-US/docs/Web/API/File).",
              "doc-url": "https://vuetifyjs.com/api/v-file-input#slots",
              "vue-properties": [
                {
                  "name": "fileNames",
                  "type": "string[]"
                },
                {
                  "name": "totalBytes",
                  "type": "number"
                },
                {
                  "name": "totalBytesReadable",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VFooter",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VFooter"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-footer",
          "attributes": [
            {
              "name": "app",
              "description": "Determines the position of the footer. If true, the footer would be given a fixed position at the bottom of the viewport. If false, the footer is set to the bottom of the page.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "default": "'footer'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-footer#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VForm",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VForm"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-form",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The value representing the validity of the form. If the value is `null` then no validation has taken place yet, or the form has been reset. Otherwise the value will be a `boolean` that indicates if validation has passed or not.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children inputs into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "fastFail",
              "description": "Stop validation as soon as any rules fail.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "readonly",
              "description": "Puts all children inputs into a readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "validateOn",
              "description": "Changes the events in which validation occurs.",
              "doc-url": "https://vuetifyjs.com/api/v-form#props",
              "default": "'input'",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event emitted when the form's validity changes.",
              "doc-url": "https://vuetifyjs.com/api/v-form#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "submit",
              "description": "Emitted when form is submitted.",
              "doc-url": "https://vuetifyjs.com/api/v-form#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/form.ts#L49-L49\" target=\"_blank\">SubmitEventPromise</a>]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-form#slots",
              "vue-properties": [
                {
                  "name": "errors",
                  "type": "Ref<{ id: string | number; errorMessages: string[]; }[]>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isValidating",
                  "type": "ShallowRef<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "Ref<boolean | null> & { externalValue: boolean }"
                },
                {
                  "name": "items",
                  "type": "Ref<{ id: string | number; validate: () => Promise<string[]>; reset: () => void; resetValidation: () => void; isValid: boolean | null; errorMessages: string[]; }[]>"
                },
                {
                  "name": "validate",
                  "type": "() => Promise<{ valid: boolean; errors: { id: string | number; errorMessages: string[]; }[]; }>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VHover",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VHover"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-hover",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes hover functionality.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-hover#slots",
              "vue-properties": [
                {
                  "name": "isHovering",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-icon",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "default": "'i'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-icon#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VImg",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VImg"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-img",
          "attributes": [
            {
              "name": "alt",
              "description": "Alternate text for screen readers. Leave empty for decorative images.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "cover",
              "description": "Resizes the background image to cover the entire container.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "draggable",
              "description": "Controls the `draggable` behavior of the image. See [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/draggable).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "boolean | 'true' | 'false'"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "gradient",
              "description": "The gradient to apply to the image. This can be any valid CSS gradient declaration. You can find more information on the [MDN documentation for gradients](https://developer.mozilla.org/en-US/docs/Web/CSS/gradient).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lazySrc",
              "description": "Something to show while waiting for the main image to load, typically a small base64-encoded thumbnail. Has a slight blur filter applied.\n\nUse [vuetify-loader](https://github.com/vuetifyjs/vuetify-loader) to generate automatically. NOTE: This prop has no effect unless either `height` or `aspect-ratio` are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "options",
              "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "{\n  root: undefined,\n  rootMargin: undefined,\n  threshold: undefined\n}",
              "value": {
                "kind": "expression",
                "type": "IntersectionObserverInit"
              }
            },
            {
              "name": "sizes",
              "description": "For use with `srcset`, see [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-sizes).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "src",
              "description": "The image URL. This prop is mandatory.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "",
              "value": {
                "kind": "expression",
                "type": "| string\n  | { src: string; srcset: string; lazySrc: string; aspect: number }"
              }
            },
            {
              "name": "srcset",
              "description": "A set of alternate images to use based on device size. [Read more...](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#attr-srcset).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "position",
              "description": "Applies [object-position](https://developer.mozilla.org/en-US/docs/Web/CSS/object-position) styles to the image and placeholder elements.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "aspectRatio",
              "description": "Calculated as `width/height`, so for a 1920x1080px image this will be `1.7778`. Will be calculated automatically if omitted.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "contentClass",
              "description": "Apply a custom class to the internal content element.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Display as an inline element instead of a block, also disables flex-grow.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "transition",
              "description": "The transition to use when switching from `lazy-src` to `src`. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "default": "'fade-transition'",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "crossorigin",
              "description": "Specify that images should be fetched with CORS enabled [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#crossorigin)",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "'' | 'anonymous' | 'use-credentials'"
              }
            },
            {
              "name": "referrerpolicy",
              "description": "Define which referrer is sent when fetching the resource [MDN](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/img#referrerpolicy)",
              "doc-url": "https://vuetifyjs.com/api/v-img#props",
              "value": {
                "kind": "expression",
                "type": "| 'no-referrer'\n  | 'no-referrer-when-downgrade'\n  | 'origin'\n  | 'origin-when-cross-origin'\n  | 'same-origin'\n  | 'strict-origin'\n  | 'strict-origin-when-cross-origin'\n  | 'unsafe-url'"
              }
            }
          ],
          "events": [
            {
              "name": "error",
              "description": "Emitted if the image fails to load.",
              "doc-url": "https://vuetifyjs.com/api/v-img#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "loadstart",
              "description": "Emitted when the image starts to load.",
              "doc-url": "https://vuetifyjs.com/api/v-img#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "load",
              "description": "Emitted when the image is loaded.",
              "doc-url": "https://vuetifyjs.com/api/v-img#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            },
            {
              "name": "placeholder",
              "description": "Display an overlay while the image is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            },
            {
              "name": "error",
              "description": "Will be shown if the image fails to load, replacing the placeholder slot.",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            },
            {
              "name": "sources",
              "description": "A list of `<source>` elements. If this slot is used v-img will render a `<picture>` instead of `<img>`.",
              "doc-url": "https://vuetifyjs.com/api/v-img#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VInfiniteScroll",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VInfiniteScroll"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "direction",
              "description": "Specifies if scroller is **vertical** or **horizontal**.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'vertical'",
              "value": {
                "kind": "expression",
                "type": "'vertical' | 'horizontal'"
              }
            },
            {
              "name": "side",
              "description": "Specifies the side where new content should appear. Either the **start**, **end**, or **both** sides.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'end'",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'both'"
              }
            },
            {
              "name": "mode",
              "description": "Specifies if content should load automatically when scrolling (**intersect**) or manually (**manual**).",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'intersect'",
              "value": {
                "kind": "expression",
                "type": "'intersect' | 'manual'"
              }
            },
            {
              "name": "margin",
              "description": "Value sent to the intersection observer. Will make the observer trigger earlier, by the margin (px) value supplied.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "loadMoreText",
              "description": "Text shown in default load more button, when in manual mode.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'$vuetify.infiniteScroll.loadMore'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "emptyText",
              "description": "Text shown when there is no more content to load.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'$vuetify.infiniteScroll.empty'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "load",
              "description": "Emitted when reaching the start / end threshold, or if triggered when using manual mode.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[\n  {\n    side: 'start' | 'end' | 'both'\n    done: (status: 'loading' | 'error' | 'empty' | 'ok') => void\n  },\n]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots"
            },
            {
              "name": "loading",
              "description": "Shown when content is loading.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"start\" | \"end\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "error",
              "description": "Shown when load returned status 'error'.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"start\" | \"end\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "empty",
              "description": "Shown when load returned status 'empty'.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"start\" | \"end\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "load-more",
              "description": "Shown when scrolled to either side of the content, in manual mode.",
              "doc-url": "https://vuetifyjs.com/api/v-infinite-scroll#slots",
              "vue-properties": [
                {
                  "name": "side",
                  "type": "\"start\" | \"end\" | \"both\""
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VInput",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VInput"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-input",
          "attributes": [
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-input#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-item",
          "attributes": [
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-item#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "selectedClass",
                  "type": "boolean | (string)[]"
                },
                {
                  "name": "select",
                  "type": "((value: boolean) => void)"
                },
                {
                  "name": "toggle",
                  "type": "(() => void)"
                },
                {
                  "name": "value",
                  "type": "unknown"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VItemGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VItemGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-item-group",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the selected CSS class. This class will be available in `v-item` default scoped slot.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "'v-item--selected'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-item-group#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "selected",
                  "type": "number[]"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VKbd",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VKbd"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-kbd",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-kbd#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-kbd#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLabel",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLabel"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-label",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-label#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "clickable",
              "description": "Changes the cursor to a pointer when the mouse is over the element.",
              "doc-url": "https://vuetifyjs.com/api/v-label#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-label#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-label#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLayout",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLayout"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-layout",
          "attributes": [
            {
              "name": "fullHeight",
              "description": "Sets the component height to 100%.",
              "doc-url": "https://vuetifyjs.com/api/v-layout#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "overlaps",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-layout#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-layout#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLayoutItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLayoutItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-layout-item",
          "attributes": [
            {
              "name": "position",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VLayoutItem.json))",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "value": {
                "kind": "expression",
                "type": "'top' | 'right' | 'bottom' | 'left'"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-layout-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLazy",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLazy"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-lazy",
          "attributes": [
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "options",
              "description": "Options that are passed to the [Intersection observer](https://developer.mozilla.org/en-US/docs/Web/API/Intersection_Observer_API) constructor.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "{\n  root: undefined,\n  rootMargin: undefined,\n  threshold: undefined\n}",
              "value": {
                "kind": "expression",
                "type": "IntersectionObserverInit"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#props",
              "default": "'fade-transition'",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-lazy#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLigatureIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLigatureIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-ligature-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-ligature-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-ligature-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VList",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VList"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list",
          "attributes": [
            {
              "name": "baseColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children inputs into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "expandIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "collapseIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lines",
              "description": "Designates a **minimum-height** for all children `v-list-item` components. This prop uses [line-clamp](https://developer.mozilla.org/en-US/docs/Web/CSS/-webkit-line-clamp) and is not supported in all browsers.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'one'",
              "value": {
                "kind": "expression",
                "type": "false | 'one' | 'two' | 'three'"
              }
            },
            {
              "name": "slim",
              "description": "Reduces horizontal spacing for badges, icons, tooltips, and avatars within slim list items to create a more compact visual representation.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "nav",
              "description": "An alternative styling that reduces `v-list-item` width and rounds the corners. Typically used with **[v-navigation-drawer](/components/navigation-drawers)**.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectStrategy",
              "description": "Affects how items with children behave when selected.\n- **leaf:** Only leaf nodes (items without children) can be selected.\n- **independent:** All nodes can be selected whether they have children or not.\n- **classic:** Selecting a parent node will cause all children to be selected, parent nodes will be displayed as selected if all their descendants are selected. Only leaf nodes will be added to the model.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'single-leaf'",
              "value": {
                "kind": "expression",
                "type": "| 'single-leaf'\n  | 'leaf'\n  | 'independent'\n  | 'single-independent'\n  | 'classic'\n  | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/selectStrategies.ts#L5-L12\" target=\"_blank\">SelectStrategyFn</a>"
              }
            },
            {
              "name": "openStrategy",
              "description": "Affects how items with children behave when expanded.\n- **multiple:** Any number of groups can be open at once.\n- **single:** Only one group at each level can be open, opening a group will cause others to close.\n- **list:** Multiple, but all other groups will close when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'list'",
              "value": {
                "kind": "expression",
                "type": "| 'single'\n  | 'multiple'\n  | 'list'\n  | { open: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/openStrategies.ts#L1-L8\" target=\"_blank\">OpenStrategyFn</a>; select: <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/nested/openStrategies.ts#L10-L18\" target=\"_blank\">OpenSelectStrategyFn</a> }"
              }
            },
            {
              "name": "opened",
              "description": "An array containing the values of currently opened groups. Can be two-way bound with `v-model:opened`.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "unknown[]"
              }
            },
            {
              "name": "selected",
              "description": "An array containing the values of currently selected items. Can be two-way bound with `v-model:selected`.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "unknown[]"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "itemType",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'type'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "items",
              "description": "Can be an array of objects or strings. By default objects should have a **title** property, and can optionally have a **props** property containing any [VListItem props](/api/v-list-item/#props), a **value** property to allow selection, and a **children** property containing more item objects. Keys to use for these can be changed with the **item-title**, **item-value**, **item-props**, and **item-children** props.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'children'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            }
          ],
          "events": [
            {
              "name": "update:selected",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown[]]\n"
                }
              ]
            },
            {
              "name": "update:opened",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown[]]\n"
                }
              ]
            },
            {
              "name": "click:open",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ id: unknown; value: boolean; path: unknown[] }]\n"
                }
              ]
            },
            {
              "name": "click:select",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VList.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ id: unknown; value: boolean; path: unknown[] }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots"
            },
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            },
            {
              "name": "divider",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VList/VListChildren.tsx#L22-L22.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            },
            {
              "name": "subheader",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VList/VListChildren.tsx#L23-L23.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            },
            {
              "name": "header",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/vuetify/src/components/VList/VListChildren.tsx#L24-L24.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ title: string; value: any; [string]: any }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-group",
          "attributes": [
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "collapseIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "'$collapse'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "expandIcon",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "'$expand'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "fluid",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "subgroup",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "value",
              "description": "Expands / Collapse the list-group.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#slots"
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-group#slots",
              "vue-properties": [
                {
                  "name": "isOpen",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListImg",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListImg"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-img",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-img#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-img#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item",
          "attributes": [
            {
              "name": "title",
              "description": "Generates a `v-list-item-title` component with the supplied value. Note that this overrides the native [`title`](https://developer.mozilla.org/en-US/docs/Web/HTML/Global_attributes/title) attribute, that must be set with `v-bind:title.attr` instead.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "activeClass",
              "description": "The class applied to the component when it matches the current route. Find more information about the [active-class prop](https://router.vuejs.org/api/#active-class) on the [vue-router](https://router.vuejs.org/) documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendAvatar",
              "description": "Appends a [v-avatar](/components/avatars/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "baseColor",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListItem.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "link",
              "description": "Designates that the component is a link. This is automatic when using the href or to prop.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "nav",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListItem.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependAvatar",
              "description": "Prepends a [v-avatar](/components/avatars/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "value",
              "description": "The value used for selection.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "slim",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListItem.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control when in an **active** state or **input-value** is **true** - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors),",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            },
            {
              "name": "lines",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListItem.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#props",
              "value": {
                "kind": "expression",
                "type": "'one' | 'two' | 'three'"
              }
            }
          ],
          "events": [
            {
              "name": "click",
              "description": "Event that is emitted when the component is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent | KeyboardEvent]\n"
                }
              ]
            },
            {
              "name": "clickOnce",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListItem.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "isIndeterminate",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "isIndeterminate",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "isIndeterminate",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                }
              ]
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "title",
                  "type": "string | number"
                }
              ]
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item#slots",
              "vue-properties": [
                {
                  "name": "subtitle",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemAction",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemAction"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-action",
          "attributes": [
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-action#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemMedia",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemMedia"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-media",
          "attributes": [
            {
              "name": "start",
              "description": "Applies margin at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "end",
              "description": "Applies margin at the start of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-media#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemSubtitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemSubtitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-subtitle",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-subtitle#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-subtitle#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListItemTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListItemTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-item-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-item-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VListSubheader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VListSubheader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-list-subheader",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inset",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListSubheader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VListSubheader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-list-subheader#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VLocaleProvider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VLocaleProvider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-locale-provider",
          "attributes": [
            {
              "name": "locale",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VLocaleProvider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "fallbackLocale",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VLocaleProvider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "rtl",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VLocaleProvider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-locale-provider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VMain",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VMain"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-main",
          "attributes": [
            {
              "name": "scrollable",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VMain.json))",
              "doc-url": "https://vuetifyjs.com/api/v-main#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-main#props",
              "default": "'main'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-main#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VMenu",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VMenu"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-menu",
          "attributes": [
            {
              "name": "activator",
              "description": "Explicitly sets the overlay's activator.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance"
              }
            },
            {
              "name": "id",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VMenu.json))",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.).",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "contentProps",
              "description": "Apply custom properties to the content.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "target",
              "description": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "| Element\n  | 'parent'\n  | 'cursor'\n  | (string & {})\n  | ComponentPublicInstance\n  | [number, number]"
              }
            },
            {
              "name": "activatorProps",
              "description": "Apply custom properties to the activator.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "openOnClick",
              "description": "Designates whether menu should open on activator click.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnHover",
              "description": "Designates whether menu should open on activator hover.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnFocus",
              "description": "Activate the component when the activator is focused.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Designates if menu should close when its content is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only works with the **open-on-hover** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "250",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only works with the **open-on-hover** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "300",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component. Use `auto` to use the activator width.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'connected'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>"
              }
            },
            {
              "name": "location",
              "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both..",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "Strategy used when the component is activate and user scrolls.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "'reposition'",
              "value": {
                "kind": "expression",
                "type": "'none' | 'close' | 'block' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "{component: {name: 'VDialogTransition'}}",
              "value": {
                "kind": "expression",
                "type": "| { component: Component }\n  | string\n  | boolean\n  | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default. Generally not recommended except as a last resort: the default positioning algorithm should handle most scenarios better than is possible without teleporting, and you may have unexpected behavior if the menu ends up as child of its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-menu#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VMessages",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VMessages"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-messages",
          "attributes": [
            {
              "name": "active",
              "description": "Determines whether the messages are visible or not.",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-messages#props",
              "default": "{\n  component: {name: 'slide-y-transition'},\n  leaveAbsolute: true,\n  group: true\n}",
              "value": {
                "kind": "expression",
                "type": "| { component: Component; leaveAbsolute: boolean; group: boolean }\n  | string\n  | boolean\n  | (TransitionProps & { component: Component })"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-messages#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VNavigationDrawer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VNavigationDrawer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer",
          "attributes": [
            {
              "name": "image",
              "description": "Apply a specific background image to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disableResizeWatcher",
              "description": "Prevents the automatic opening or closing of the drawer when resized, based on whether the device is mobile or desktop.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "disableRouteWatcher",
              "description": "Disables opening of navigation drawer when route changes.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "expandOnHover",
              "description": "Collapses the drawer to a **mini-variant** until hovering with the mouse.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "floating",
              "description": "A floating drawer has no visible container (no border-right).",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "permanent",
              "description": "The drawer remains visible regardless of screen size.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rail",
              "description": "Sets the component width to the **rail-width** value.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "railWidth",
              "description": "Sets the width for the component when `rail` is enabled.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "56",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "scrim",
              "description": "Determines whether an overlay is used when a **temporary** drawer is open. Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "temporary",
              "description": "A temporary drawer sits above its application and uses a scrim (overlay) to darken the background.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "touchless",
              "description": "Disable mobile touch functionality.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "256",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VNavigationDrawer.json))",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "'start'",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'left' | 'right' | 'top' | 'bottom'"
              }
            },
            {
              "name": "sticky",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VNavigationDrawer.json))",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "mobileBreakpoint",
              "description": "Sets the designated mobile breakpoint for the component. This will apply alternate styles for mobile devices such as the `temporary` prop, or activate the `bottom` prop when the breakpoint value is met. Setting the value to `0` will disable this functionality.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "default": "'nav'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:rail",
              "description": "Event that is emitted when the rail model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots"
            },
            {
              "name": "prepend",
              "description": "A slot at the top of the drawer",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots"
            },
            {
              "name": "append",
              "description": "A slot at the bottom of the drawer.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots"
            },
            {
              "name": "image",
              "description": "Used to modify `v-img` properties when using the **src** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-navigation-drawer#slots",
              "vue-properties": [
                {
                  "name": "image",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VNoSsr",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VNoSsr"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-no-ssr",
          "attributes": [],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VOtpInput",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VOtpInput"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-otp-input",
          "attributes": [
            {
              "name": "length",
              "description": "The OTP field's length.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "6",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "autofocus",
              "description": "Automatically focuses the first input on page load",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "divider",
              "description": "Specifies the dividing character between items.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "focusAll",
              "description": "Puts all inputs into a focus state when any are focused",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "'$vuetify.input.otp'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "Supported types: `text`, `password`, `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "'number'",
              "value": {
                "kind": "expression",
                "type": "'number' | 'text' | 'password'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "'outlined'",
              "value": {
                "kind": "expression",
                "type": "| 'underlined'\n  | 'outlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n  | 'plain'"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "finish",
              "description": "Emitted when the input is filled completely and cursor is blurred.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-otp-input#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VOverlay",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VOverlay"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-overlay",
          "attributes": [
            {
              "name": "activator",
              "description": "Explicitly sets the overlay's activator.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.).",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "contentProps",
              "description": "Apply custom properties to the content.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistent",
              "description": "Clicking outside of the element or pressing esc key will not deactivate it.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "target",
              "description": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "| Element\n  | 'parent'\n  | 'cursor'\n  | (string & {})\n  | ComponentPublicInstance\n  | [number, number]"
              }
            },
            {
              "name": "activatorProps",
              "description": "Apply custom properties to the activator.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "openOnClick",
              "description": "Activate the component when the activator is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnHover",
              "description": "Activate the component when the activator is hovered.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnFocus",
              "description": "Activate the component when the activator is focused.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>"
              }
            },
            {
              "name": "location",
              "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both..",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "Strategy used when the component is activate and user scrolls.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'block'",
              "value": {
                "kind": "expression",
                "type": "'none' | 'close' | 'block' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "'fade-transition'",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element"
              }
            }
          ],
          "events": [
            {
              "name": "click:outside",
              "description": "Event that fires when clicking outside an active overlay.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "afterLeave",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VOverlay.json))",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-overlay#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VPagination",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VPagination"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-pagination",
          "attributes": [
            {
              "name": "length",
              "description": "The number of pages.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "start",
              "description": "Specify the starting page.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "totalVisible",
              "description": "Specify the total visible pagination numbers.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "firstIcon",
              "description": "The icon to use for the first button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$first'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prevIcon",
              "description": "The icon to use for the prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "nextIcon",
              "description": "The icon to use for the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "lastIcon",
              "description": "The icon to use for the last button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$last'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ariaLabel",
              "description": "Label for the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.root'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "pageAriaLabel",
              "description": "Label for each page button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.page'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "currentPageAriaLabel",
              "description": "Label for the currently selected page.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.currentPage'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "firstAriaLabel",
              "description": "Label for the go to first button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.first'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "previousAriaLabel",
              "description": "Label for the previous button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.previous'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextAriaLabel",
              "description": "Label for the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lastAriaLabel",
              "description": "Label for the go to last button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'$vuetify.pagination.ariaLabel.last'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "ellipsis",
              "description": "Text to show between page buttons when truncating the list.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'...'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "showFirstLastPage",
              "description": "Show buttons for going to first and last page.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'nav'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the selected page button - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            }
          ],
          "events": [
            {
              "name": "first",
              "description": "Emitted when clicking on go to first button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Emitted when clicking on go to previous button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "next",
              "description": "Emitted when clicking on go to next button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "last",
              "description": "Emitted when clicking on go to last button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "key",
                  "type": "string | number"
                },
                {
                  "name": "page",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "first",
              "description": "Define a custom appearance for the first button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "aria-label",
                  "type": "string"
                },
                {
                  "name": "aria-disabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Define a custom appearance for the previous button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "aria-label",
                  "type": "string"
                },
                {
                  "name": "aria-disabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "next",
              "description": "Define a custom appearance for the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "aria-label",
                  "type": "string"
                },
                {
                  "name": "aria-disabled",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "last",
              "description": "Define a custom appearance for the last button.",
              "doc-url": "https://vuetifyjs.com/api/v-pagination#slots",
              "vue-properties": [
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "onClick",
                  "type": "(e: Event) => void"
                },
                {
                  "name": "disabled",
                  "type": "boolean"
                },
                {
                  "name": "aria-label",
                  "type": "string"
                },
                {
                  "name": "aria-disabled",
                  "type": "boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VParallax",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VParallax"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-parallax",
          "attributes": [
            {
              "name": "scale",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VParallax.json))",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#props",
              "default": "0.5",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            },
            {
              "name": "placeholder",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VParallax.json))",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            },
            {
              "name": "error",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VParallax.json))",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            },
            {
              "name": "sources",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VParallax.json))",
              "doc-url": "https://vuetifyjs.com/api/v-parallax#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VPicker",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VPicker"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-picker",
          "attributes": [
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "landscape",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VPicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideHeader",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VPicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "header",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VPicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-picker#slots"
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#slots"
            },
            {
              "name": "actions",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VPicker.json))",
              "doc-url": "https://vuetifyjs.com/api/v-picker#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-picker#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VPickerTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VPickerTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-picker-title",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-picker-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-picker-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VProgressCircular",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VProgressCircular"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-progress-circular",
          "attributes": [
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The percentage value for current progress.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rotate",
              "description": "Rotates the circle start point in degrees.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the stroke of the circle in pixels.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "size",
              "description": "Sets the diameter of the circle in pixels.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "indeterminate",
              "description": "Constantly animates, use when loading progress is unknown. If set to the string `'disable-shrink'` it will use a simpler animation that does not run on the main thread.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'disable-shrink'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-circular#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VProgressLinear",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VProgressLinear"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-progress-linear",
          "attributes": [
            {
              "name": "absolute",
              "description": "Applies position: absolute to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "active",
              "description": "Reduce the height to 0, hiding component.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgOpacity",
              "description": "Background opacity, if null it defaults to 0.3 if background color is not specified or 1 otherwise.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "bufferValue",
              "description": "The percentage value for the buffer.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "clickable",
              "description": "Clicking on the progress track will automatically set the value.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "indeterminate",
              "description": "Constantly animates, use when loading progress is unknown.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum value the progress can reach.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "100",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "reverse",
              "description": "Displays reversed progress (right to left in LTR mode and left to right in RTL).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "stream",
              "description": "An alternative style for portraying loading that works in tandem with **buffer-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "striped",
              "description": "Adds a stripe background to the filled portion of the progress component.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "roundedBar",
              "description": "Applies a border radius to the progress bar.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "'top'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "Provides the current value of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-progress-linear#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                },
                {
                  "name": "buffer",
                  "type": "number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRadio",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRadio"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-radio",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Puts children inputs into a row.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "'$radioOff'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "'$radioOn'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#slots",
              "vue-properties": [
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-radio#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<boolean>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "inputNode",
                  "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                },
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRadioGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRadioGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-radio-group",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'radio'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Displays radio buttons in row.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'$radioOff'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "'$radioOn'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots"
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-radio-group#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRangeSlider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRangeSlider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-range-slider",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the slider direction.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "[0, 0]",
              "value": {
                "kind": "expression",
                "type": "(string | number)[]"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum allowed value.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "100",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "min",
              "description": "Sets the minimum allowed value.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "step",
              "description": "If greater than 0, sets step interval for ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "thumbColor",
              "description": "Sets the thumb and thumb label color.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "thumbLabel",
              "description": "Show thumb label. If `true` it shows label when using slider. If set to `'always'` it always shows label.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'"
              }
            },
            {
              "name": "thumbSize",
              "description": "Controls the size of the thumb label.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "20",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "showTicks",
              "description": "Show track ticks. If `true` it shows ticks when using slider. If set to `'always'` it always shows ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'"
              }
            },
            {
              "name": "ticks",
              "description": "Show track ticks. If `true` it shows ticks when using slider. If set to `'always'` it always shows ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "number[] | Record<number, string>"
              }
            },
            {
              "name": "tickSize",
              "description": "Controls the size of **ticks**",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trackColor",
              "description": "Sets the track's color",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trackFillColor",
              "description": "Sets the track's fill color",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trackSize",
              "description": "Sets the track's size (height).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "strict",
              "description": "Disallows dragging the ending thumb past the starting thumb and vice versa.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[[number, number]]\n"
                }
              ]
            },
            {
              "name": "end",
              "description": "Slider value emitted at the end of slider movement.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[[number, number]]\n"
                }
              ]
            },
            {
              "name": "start",
              "description": "Slider value emitted at start of slider movement.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[[number, number]]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "thumb-label",
              "description": "Slot for the thumb label.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "modelValue",
                  "type": "number"
                }
              ]
            },
            {
              "name": "tick-label",
              "description": "Slot for the tick label.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "tick",
                  "type": "{ value: number; position: number; label: string }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-range-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRating",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRating"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-rating",
          "attributes": [
            {
              "name": "length",
              "description": "The amount of items to show.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "5",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemAriaLabel",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VRating.json))",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'$vuetify.rating.ariaLabel.item'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "activeColor",
              "description": "The applied color when the component is in an active state.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared by clicking on the current value.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "emptyIcon",
              "description": "The icon displayed when empty.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'$ratingEmpty'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "fullIcon",
              "description": "The icon displayed when full.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'$ratingFull'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "halfIncrements",
              "description": "Allows the selection of half increments.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hover",
              "description": "Provides visual feedback when hovering over icons.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "readonly",
              "description": "Removes all hover effects and pointer events.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "itemLabelPosition",
              "description": "Position of item labels. Accepts 'top' and 'bottom'.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'top'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemLabels",
              "description": "Array of labels to display next to each item..",
              "doc-url": "https://vuetifyjs.com/api/v-rating#props",
              "value": {
                "kind": "expression",
                "type": "string[]"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string | number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "item",
              "description": "The slot for each item.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "isFilled",
                  "type": "boolean"
                },
                {
                  "name": "isHovered",
                  "type": "boolean"
                },
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                },
                {
                  "name": "rating",
                  "type": "number"
                }
              ]
            },
            {
              "name": "item-label",
              "description": "The slot for each item label.",
              "doc-url": "https://vuetifyjs.com/api/v-rating#slots",
              "vue-properties": [
                {
                  "name": "value",
                  "type": "number"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "label",
                  "type": "string"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VResponsive",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VResponsive"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-responsive",
          "attributes": [
            {
              "name": "aspectRatio",
              "description": "Sets a base aspect ratio, calculated as width/height. This will only set a **minimum** height, the component can still grow if it has a lot of content.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "contentClass",
              "description": "Apply a custom class to the internal content element.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Display as an inline element instead of a block, also disables flex-grow.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#slots"
            },
            {
              "name": "additional",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VResponsive.json))",
              "doc-url": "https://vuetifyjs.com/api/v-responsive#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VRow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VRow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-row",
          "attributes": [
            {
              "name": "dense",
              "description": "Reduces the gutter between `v-col`s.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noGutters",
              "description": "Removes the gutter between `v-col`s.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "align",
              "description": "Applies the [align-items](https://developer.mozilla.org/en-US/docs/Web/CSS/align-items) css property. Available options are: **start**, **center**, **end**, **baseline** and **stretch**.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "alignSm",
              "description": "Changes the **align-items** property on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "alignMd",
              "description": "Changes the **align-items** property on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "alignLg",
              "description": "Changes the **align-items** property on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "alignXl",
              "description": "Changes the **align-items** property on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "alignXxl",
              "description": "Changes the **align-items** property on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'center' | 'baseline' | 'stretch'"
              }
            },
            {
              "name": "justifySm",
              "description": "Changes the **justify-content** property on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "justifyMd",
              "description": "Changes the **justify-content** property on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "justifyLg",
              "description": "Changes the **justify-content** property on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "justifyXl",
              "description": "Changes the **justify-content** property on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "justifyXxl",
              "description": "Changes the **justify-content** property on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "alignContentSm",
              "description": "Changes the **align-content** property on small and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "alignContentMd",
              "description": "Changes the **align-content** property on medium and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "alignContentLg",
              "description": "Changes the **align-content** property on large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "alignContentXl",
              "description": "Changes the **align-content** property on extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "alignContentXxl",
              "description": "Changes the **align-content** property on extra extra large and greater breakpoints.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "justify",
              "description": "Applies the [justify-content](https://developer.mozilla.org/en-US/docs/Web/CSS/justify-content) css property. Available options are: **start**, **center**, **end**, **space-between** and **space-around**.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "alignContent",
              "description": "Applies the [align-content](https://developer.mozilla.org/en-US/docs/Web/CSS/align-content) css property. Available options are: **start**, **center**, **end**, **space-between**, **space-around** and **stretch**.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "| 'start'\n  | 'end'\n  | 'center'\n  | 'stretch'\n  | 'space-between'\n  | 'space-around'\n  | 'space-evenly'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-row#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-row#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScaleTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScaleTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scale-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scale-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollXReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollXReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollXTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollXTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-x-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollYReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollYReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VScrollYTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VScrollYTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-scroll-y-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSelect",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSelect"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-select",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "chips",
              "description": "Changes display of selections to chips.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closableChips",
              "description": "Enables the [closable](/api/v-chip/#props-closable) prop on all [v-chip](/components/chips/) components.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeText",
              "description": "Text set to to the inputs `aria-label` and `title` when input menu is closed.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$vuetify.close'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "Sets input type.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "openText",
              "description": "Text set to to the inputs **aria-label** and **title** when input menu is open.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$vuetify.open'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideNoData",
              "description": "Hides the menu when there are no options to show.  Useful for preventing the menu from opening before results are fetched asynchronously.  Also has the effect of opening the menu when the `items` array changes if not already open.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideSelected",
              "description": "Do not display in the select menu items that are already selected.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "listProps",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/Select.json))",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "flat",
              "description": "Removes box shadow when using a variant with elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "items",
              "description": "Can be an array of objects or strings. By default objects should have **title** and **value** properties, and can optionally have a **props** property containing any [VListItem props](/api/v-list-item/#props). Keys to use for these can be changed with the **item-title**, **item-value**, and **item-props** props.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "any[]"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemValue",
              "description": "Set property of **items**'s value - **must be primitive**. Dot notation is supported. **Note:** This is currently not supported with `v-combobox` [GitHub Issue](https://github.com/vuetifyjs/vuetify/issues/5479).",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "itemChildren",
              "description": "Property on supplied `items` that contains its children.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/helpers.ts#L72-L76\" target=\"_blank\">SelectItemKey</a>"
              }
            },
            {
              "name": "itemProps",
              "description": "Props object that will be applied to each item component. `true` will treat the original object as raw props and pass it directly to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'props'",
              "value": {
                "kind": "expression",
                "type": "SelectItemKey<any>"
              }
            },
            {
              "name": "returnObject",
              "description": "Changes the selection behavior to return the object directly rather than the value specified with **item-value**.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'outlined'\n  | 'plain'\n  | 'underlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "menu",
              "description": "Renders with the menu open by default.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "menuIcon",
              "description": "Sets the the spin icon.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$dropdown'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "menuProps",
              "description": "Pass props through to the `v-menu` component. Accepts an object with anything from [v-menu](/api/v-menu/#props) props, camelCase keys are recommended.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "{component: {name: 'VDialogTransition'}}",
              "value": {
                "kind": "expression",
                "type": "| string\n  | boolean\n  | (TransitionProps & { component: Component })\n  | { component: Component }"
              }
            },
            {
              "name": "noDataText",
              "description": "Text shown when no items are provided to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$vuetify.noDataText'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "openOnClear",
              "description": "When using the **clearable** prop, once cleared, the select menu will either open or stay open, depending on the current state.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "itemColor",
              "description": "Sets color of selected items.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "The role attribute applied to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'combobox'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "| 'lazy'\n  | 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clearable** prop is set to true.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text.",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "number | ((value: any) => number)"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-select#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[any]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:menu",
              "description": "Event that is emitted when the component's menu state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-select#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance. The root element of this slot must be a **v-list-item** with `v-bind=\"props\"` applied. `props` includes everything required for the default select list behaviour - including title, value, click handlers, virtual scrolling, and anything else that has been added with [`item-props`](api/v-select/#props-item-props).",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "chip",
              "description": "Slot for custom chip when using the [chip](#property-chip) prop.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "selection",
              "description": "Define a custom selection appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots",
              "vue-properties": [
                {
                  "name": "item",
                  "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/list-items.ts#L10-L18\" target=\"_blank\">ListItem</a>"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "prepend-item",
              "description": "Adds an item before menu content.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "append-item",
              "description": "Adds an item after menu content.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            },
            {
              "name": "no-data",
              "description": "Defines content for when no items are provided.",
              "doc-url": "https://vuetifyjs.com/api/v-select#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSelectionControl",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSelectionControl"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-selection-control",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Puts children inputs into a row.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#slots",
              "vue-properties": [
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<boolean>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "inputNode",
                  "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                },
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSelectionControlGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSelectionControlGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-selection-control-group",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "'VSelectionControl'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Puts children inputs into a row.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "multiple",
              "description": "Changes select to multiple. Accepts array for value.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-selection-control-group#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSheet",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSheet"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-sheet",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-sheet#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSkeletonLoader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSkeletonLoader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader",
          "attributes": [
            {
              "name": "boilerplate",
              "description": "Remove the loading animation from the skeleton.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "Applies a loading animation with a on-hover loading cursor. A value of **false** will only work when there is content in the `default` slot.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "loadingText",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VSkeletonLoader.json))",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "'$vuetify.loading'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "A string delimited list of skeleton components to create such as `type=\"text@3\"` or `type=\"card, list-item\"`. Will recursively generate a corresponding skeleton from the provided string. Also supports short-hand for multiple elements such as **article@3** and **paragraph@2** which will generate 3 _article_ skeletons and 2 _paragraph_ skeletons. Please see below for a list of available pre-defined options.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "default": "'ossein'",
              "value": {
                "kind": "expression",
                "type": "| 'avatar'\n  | 'button'\n  | 'chip'\n  | 'divider'\n  | 'heading'\n  | 'image'\n  | 'text'\n  | 'sentences'\n  | 'paragraph'\n  | 'ossein'\n  | 'actions'\n  | 'article'\n  | 'card'\n  | 'card-avatar'\n  | 'date-picker'\n  | 'date-picker-options'\n  | 'date-picker-days'\n  | 'list-item'\n  | 'list-item-avatar'\n  | 'list-item-two-line'\n  | 'list-item-avatar-two-line'\n  | 'list-item-three-line'\n  | 'list-item-avatar-three-line'\n  | 'subtitle'\n  | 'table'\n  | 'table-heading'\n  | 'table-thead'\n  | 'table-tbody'\n  | 'table-row-divider'\n  | 'table-row'\n  | 'table-tfoot'\n  | (string & {})\n  | (\n      | 'avatar'\n      | 'button'\n      | 'chip'\n      | 'divider'\n      | 'heading'\n      | 'image'\n      | 'text'\n      | 'sentences'\n      | 'paragraph'\n      | 'ossein'\n      | 'actions'\n      | 'article'\n      | 'card'\n      | 'card-avatar'\n      | 'date-picker'\n      | 'date-picker-options'\n      | 'date-picker-days'\n      | 'list-item'\n      | 'list-item-avatar'\n      | 'list-item-two-line'\n      | 'list-item-avatar-two-line'\n      | 'list-item-three-line'\n      | 'list-item-avatar-three-line'\n      | 'subtitle'\n      | 'table'\n      | 'table-heading'\n      | 'table-thead'\n      | 'table-tbody'\n      | 'table-row-divider'\n      | 'table-row'\n      | 'table-tfoot'\n      | (string & {})\n    )[]"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-skeleton-loader#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideGroup",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideGroup"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-group",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerActive",
              "description": "Forces the selected component to be centered.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "direction",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VSlideGroup.json))",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "nextIcon",
              "description": "The appended slot when arrows are shown.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prevIcon",
              "description": "The prepended slot when arrows are shown.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "showArrows",
              "description": "Change when the overflow arrow indicators are shown. By **default**, arrows *always* display on Desktop when the container is overflowing. When the container overflows on mobile, arrows are not shown by default. A **show-arrows** value of `true` allows these arrows to show on Mobile if the container overflowing. A value of `desktop` *always* displays arrows on Desktop while a value of `mobile` always displays arrows on Mobile. A value of `always` always displays arrows on Desktop *and* Mobile. Find more information on how to customize breakpoint thresholds on the [breakpoints page](/customizing/breakpoints).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "mobileBreakpoint",
              "description": "Sets the designated mobile breakpoint for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "'v-slide-group-item--active'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#slots",
              "vue-properties": [
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                }
              ]
            },
            {
              "name": "prev",
              "description": "The prev slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#slots",
              "vue-properties": [
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                }
              ]
            },
            {
              "name": "next",
              "description": "The next slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group#slots",
              "vue-properties": [
                {
                  "name": "next",
                  "type": "() => void"
                },
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "select",
                  "type": "(id: number, value: boolean) => void"
                },
                {
                  "name": "isSelected",
                  "type": "(id: number) => boolean"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideGroupItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideGroupItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-group-item",
          "attributes": [
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-group-item#slots",
              "vue-properties": [
                {
                  "name": "isSelected",
                  "type": "boolean"
                },
                {
                  "name": "select",
                  "type": "(value: boolean) => void"
                },
                {
                  "name": "toggle",
                  "type": "() => void"
                },
                {
                  "name": "selectedClass",
                  "type": "false | (string)[]"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideXReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideXReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideXTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideXTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-x-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideYReverseTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideYReverseTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-reverse-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlideYTransition",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlideYTransition"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "group",
              "description": "Creates a `transition-group` component. You can find more information in the [vue docs](https://vuejs.org/api/built-in-components.html#transitiongroup).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOnLeave",
              "description": "Hides the leaving element (no exit animation).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "leaveAbsolute",
              "description": "Absolutely positions the leaving element (useful for [FLIP](https://aerotwist.com/blog/flip-your-animations/)).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mode",
              "description": "Sets the transition mode (does not apply to transition-group). You can find more information on the Vue documentation [for transition modes](https://vuejs.org/api/built-in-components.html#transition).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slide-y-transition#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSlider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSlider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-slider",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the slider direction.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets the maximum allowed value.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "100",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "min",
              "description": "Sets the minimum allowed value.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "step",
              "description": "If greater than 0, sets step interval for ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "thumbColor",
              "description": "Sets the thumb and thumb label color.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "thumbLabel",
              "description": "Show thumb label. If `true` it shows label when using slider. If set to `'always'` it always shows label.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'"
              }
            },
            {
              "name": "thumbSize",
              "description": "Controls the size of the thumb label.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "20",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "showTicks",
              "description": "Show track ticks. If `true` it shows ticks when using slider. If set to `'always'` it always shows ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'always'"
              }
            },
            {
              "name": "ticks",
              "description": "Show track ticks. If `true` it shows ticks when using slider. If set to `'always'` it always shows ticks.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "number[] | Record<number, string>"
              }
            },
            {
              "name": "tickSize",
              "description": "Controls the size of **ticks**",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trackColor",
              "description": "Sets the track's color",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trackFillColor",
              "description": "Sets the track's fill color",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trackSize",
              "description": "Sets the track's size (height).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "4",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            }
          ],
          "events": [
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "start",
              "description": "Slider value emitted at start of slider movement.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            },
            {
              "name": "end",
              "description": "Slider value emitted at the end of slider movement.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[number]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "thumb-label",
              "description": "Slot for the thumb label.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "modelValue",
                  "type": "number"
                }
              ]
            },
            {
              "name": "tick-label",
              "description": "Slot for the tick label.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "tick",
                  "type": "{ value: number; position: number; label: string }"
                },
                {
                  "name": "index",
                  "type": "number"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-slider#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSnackbar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSnackbar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-snackbar",
          "attributes": [
            {
              "name": "activator",
              "description": "Explicitly sets the overlay's activator.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "multiLine",
              "description": "Gives the snackbar a larger minimum height.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "timer",
              "description": "Display a progress bar that counts down until the snackbar closes. Pass a string to set a custom color, otherwise uses `info`.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "timeout",
              "description": "Time (in milliseconds) to wait until snackbar is automatically hidden.  Use `-1` to keep open indefinitely (`0` in version < 2.3 ). It is recommended for this number to be between `4000` and `10000`. Changes to this property will reset the timeout.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "5000",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "vertical",
              "description": "Stacks snackbar content on top of the actions (button).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "location",
              "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both..",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'bottom'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the content element.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'elevated'",
              "value": {
                "kind": "expression",
                "type": "'text' | 'flat' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "contentProps",
              "description": "Apply custom properties to the content.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "target",
              "description": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "| Element\n  | 'parent'\n  | 'cursor'\n  | (string & {})\n  | ComponentPublicInstance\n  | [number, number]"
              }
            },
            {
              "name": "activatorProps",
              "description": "Apply custom properties to the activator.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "openOnClick",
              "description": "Activate the component when the activator is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnHover",
              "description": "Activate the component when the activator is hovered.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnFocus",
              "description": "Activate the component when the activator is focused.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Milliseconds to wait before closing component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Milliseconds to wait before opening component. Only applies to hover and focus events.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'static'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "'v-snackbar-transition'",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots"
            },
            {
              "name": "actions",
              "description": "Used to bind styles to [v-btn](/components/buttons) to match MD2 specification.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-snackbar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSpacer",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSpacer"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-spacer",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-spacer#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-spacer#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VStepper",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VStepper"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-stepper",
          "attributes": [
            {
              "name": "flat",
              "description": "Removes the stepper's elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "altLabels",
              "description": "Places the labels beneath the step.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "editable",
              "description": "Marks step as editable.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideActions",
              "description": "Hide actions bar (prev and next buttons).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "An array of strings or objects used for automatically generating children components.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(string | Record<string, any>)[]"
              }
            },
            {
              "name": "itemTitle",
              "description": "Property on supplied `items` that contains its title.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'title'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "itemValue",
              "description": "Property on supplied `items` that contains its value.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'value'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "mobile",
              "description": "Forces the stepper into a mobile state, removing labels from stepper items.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "nonLinear",
              "description": "Allow user to jump to any step.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'v-stepper-item--selected'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "location",
              "description": "Specifies the component's location. Can combine by using a space separated string.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "position",
              "description": "Sets the position for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "'static' | 'relative' | 'fixed' | 'absolute' | 'sticky'"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "prevText",
              "description": "The text used for the Prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'$vuetify.stepper.prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextText",
              "description": "The text used for the Next button.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#props",
              "default": "'$vuetify.stepper.next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "actions",
              "description": "Slot for customizing [v-stepper-actions](/api/v-stepper-actions/).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "next",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "prev",
                  "type": "() => void"
                },
                {
                  "name": "next",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "header",
              "description": "Slot for customizing the header.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots"
            },
            {
              "name": "header-item",
              "description": "Slot for customizing all header items.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "icon",
              "description": "Slot for customizing all stepper item icons.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "item",
              "description": "Define a custom item appearance.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots"
            },
            {
              "name": "prev",
              "description": "Slot for customizing the prev step functionality",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots"
            },
            {
              "name": "next",
              "description": "Slot for customizing the next step functionailty",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots"
            },
            {
              "name": "[`header-item.${string}`]",
              "description": "Slot for customizing header items when using the [items](/api/v-stepper/#props-items) prop.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "[`item.${string}`]",
              "description": "Slot for customizing the content for each step.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VStepperActions",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VStepperActions"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-stepper-actions",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'prev' | 'next'"
              }
            },
            {
              "name": "prevText",
              "description": "The text used for the Prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#props",
              "default": "'$vuetify.stepper.prev'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "nextText",
              "description": "The text used for the Next button.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#props",
              "default": "'$vuetify.stepper.next'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "click:prev",
              "description": "Event emitted when clicking the prev button.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            },
            {
              "name": "click:next",
              "description": "Event emitted when clicking the next button.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prev",
              "description": "Slot for customizing the prev step functionality",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ onClick: () => void }"
                }
              ]
            },
            {
              "name": "next",
              "description": "Slot for customizing the next step functionailty",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-actions#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ onClick: () => void }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VStepperHeader",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VStepperHeader"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-stepper-header",
          "attributes": [
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-header#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-header#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VStepperItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VStepperItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-stepper-item",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "subtitle",
              "description": "Specify a subtitle text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "complete",
              "description": "Marks step as complete.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "completeIcon",
              "description": "Icon to display when step is marked as completed.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "'$complete'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "editable",
              "description": "Marks step as editable.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "editIcon",
              "description": "Icon to display when step is editable.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "'$edit'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "error",
              "description": "Puts the stepper item in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorIcon",
              "description": "Icon to display when step has an error.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "'$error'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VStepper/VStepperItem.tsx#L39-L39\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "icon",
              "description": "Slot for customizing all stepper item icons.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            },
            {
              "name": "subtitle",
              "description": "Slot for the component's subtitle content.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-item#slots",
              "vue-properties": [
                {
                  "name": "canEdit",
                  "type": "boolean"
                },
                {
                  "name": "hasError",
                  "type": "boolean"
                },
                {
                  "name": "hasCompleted",
                  "type": "boolean"
                },
                {
                  "name": "title",
                  "type": "string | number"
                },
                {
                  "name": "subtitle",
                  "type": "string | number"
                },
                {
                  "name": "step",
                  "type": "any"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VStepperWindow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VStepperWindow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-stepper-window",
          "attributes": [
            {
              "name": "reverse",
              "description": "Reverse the normal transition direction.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "direction",
              "description": "The transition direction when changing windows.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "default": "'v-window-item--active'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VStepperWindowItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VStepperWindowItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item",
          "attributes": [
            {
              "name": "reverseTransition",
              "description": "Sets the reverse transition.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "transition",
              "description": "The transition used when the component progressing through items. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Prevents the item from becoming active when using the \"next\" and \"prev\" buttons or the `toggle` method.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-stepper-window-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSvgIcon",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSvgIcon"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-svg-icon",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-svg-icon#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-svg-icon#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSwitch",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSwitch"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-switch",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "indeterminate",
              "description": "Sets an indeterminate state for the switch.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "inset",
              "description": "Enlarge the `v-switch` track to encompass the thumb.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "flat",
              "description": "Display component without elevation. Default elevation for thumb is 4dp, `flat` resets it.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "loading",
              "description": "Displays circular progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - primary, secondary, success, info, warning, error) or a Boolean which uses the component color (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "type",
              "description": "Provides the default type for children selection controls.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "| 'input'\n  | 'blur'\n  | 'submit'\n  | 'input lazy'\n  | 'blur lazy'\n  | 'submit lazy'\n  | 'lazy input'\n  | 'lazy blur'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "trueValue",
              "description": "Sets value for truthy state.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "falseValue",
              "description": "Sets value for falsy state.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "defaultsTarget",
              "description": "The target component to provide defaults values for.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "inline",
              "description": "Puts children inputs into a row.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "falseIcon",
              "description": "The icon used when inactive.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "trueIcon",
              "description": "The icon used when active.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "multiple",
              "description": "Changes expected model to an array.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "valueComparator",
              "description": "Apply a custom comparison algorithm to compare **model-value** and values contains in the **items** prop.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "(a: any, b: any) => boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when appended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            },
            {
              "name": "update:indeterminate",
              "description": "Event that is emitted when the component's indeterminate state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "label",
                  "type": "string"
                },
                {
                  "name": "props",
                  "type": "Record<string, unknown>"
                }
              ]
            },
            {
              "name": "input",
              "description": "The slot used for the default input element.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "WritableComputedRef<boolean>"
                },
                {
                  "name": "textColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "textColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "backgroundColorClasses",
                  "type": "Ref<string[]>"
                },
                {
                  "name": "backgroundColorStyles",
                  "type": "Ref<CSSProperties>"
                },
                {
                  "name": "inputNode",
                  "type": "VNode<RendererNode, RendererElement, { [key: string]: any; }>"
                },
                {
                  "name": "icon",
                  "type": "any"
                },
                {
                  "name": "props",
                  "type": "{ onBlur: (e: Event) => void; onFocus: (e: FocusEvent) => void; id: string }"
                }
              ]
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "thumb",
              "description": "Slot for custom thumb content.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots"
            },
            {
              "name": "track-false",
              "description": "Slot for custom track content when value is false.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                }
              ]
            },
            {
              "name": "track-true",
              "description": "Slot for custom track content when value is true.",
              "doc-url": "https://vuetifyjs.com/api/v-switch#slots",
              "vue-properties": [
                {
                  "name": "model",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VSystemBar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VSystemBar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-system-bar",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "window",
              "description": "Increases the system bar height to 32px (24px default).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Assign a specific name for layout registration.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "order",
              "description": "Adjust the order of the component in relation to its registration order.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "absolute",
              "description": "Applies **position: absolute** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-system-bar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTab",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTab"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-tab",
          "attributes": [
            {
              "name": "fixed",
              "description": "Forces component to take up all available space up to their maximum width (300px), and centers it.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sliderColor",
              "description": "Applies specified color to the slider when active on that component - supports utility colors (for example success or purple) or css color (#033 or rgba(255, 0, 0, 0.5)). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "hideSlider",
              "description": "Hides the active tab slider component (no exit or enter animation).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the tabs. Can be either `horizontal` or `vertical`.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "prependIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend** slot before default content.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "slim",
              "description": "Reduces padding to 0 8px.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "stacked",
              "description": "Displays the tab as a flex-column.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "ripple",
              "description": "Applies the [v-ripple](/directives/ripple) directive.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean | { class: string }"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'v-tab--selected'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "href",
              "description": "Designates the component as anchor and applies the **href** attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "replace",
              "description": "Setting **replace** prop will call `router.replace()` instead of `router.push()` when clicked, so the navigation will not leave a history record. You can find more information about the [replace](https://router.vuejs.org/api/#replace) prop on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "exact",
              "description": "Exactly match the link. Without this, '/' will match every route. You can find more information about the [**exact** prop](https://router.vuejs.org/api/#exact) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "to",
              "description": "Denotes the target route of the link. You can find more information about the [**to** prop](https://router.vuejs.org/api/#to) on the vue-router documentation.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "RouteLocationRaw"
              }
            },
            {
              "name": "size",
              "description": "Sets the height and width of the component. Default unit is px. Can also use the following predefined sizes: **x-small**, **small**, **default**, **large**, and **x-large**.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'button'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'text' | 'elevated' | 'tonal' | 'outlined' | 'plain'"
              }
            },
            {
              "name": "icon",
              "description": "Apply a specific icon using the [v-icon](/components/icons/) component. The button will become _round_.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-tab#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-tab#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTable",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTable"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-table",
          "attributes": [
            {
              "name": "fixedHeader",
              "description": "Use the fixed-header prop together with the height prop to fix the header to the top of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "fixedFooter",
              "description": "Use the fixed-footer prop together with the height prop to fix the footer to the bottom of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Use the height prop to set the height of the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hover",
              "description": "Will add a hover effect to a table's row when the mouse is over it.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-table#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            },
            {
              "name": "top",
              "description": "Slot to add content above the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            },
            {
              "name": "bottom",
              "description": "Slot to add content below the table.",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            },
            {
              "name": "wrapper",
              "description": "Slots for custom rendering of the table wrapper.",
              "doc-url": "https://vuetifyjs.com/api/v-table#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTabs",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTabs"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-tabs",
          "attributes": [
            {
              "name": "symbol",
              "description": "The [Symbol](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol) used to hook into group functionality for components like [v-btn-toggle](/components/btn-toggle) and [v-bottom-navigation](/components/bottom-navigations/).",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "alignTabs",
              "description": "Aligns the tabs to the `start`, `center`, or `end` of container. Also accepts `title` to align with the `v-toolbar-title` component.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'start'",
              "value": {
                "kind": "expression",
                "type": "'start' | 'title' | 'center' | 'end'"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the selected tab - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "fixedTabs",
              "description": "`v-tabs-item` min-width 160px, max-width 360px.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "items",
              "description": "The items to display in the component. This can be an array of strings or objects with a property `title`.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "(string | number | Record<string, any>)[]"
              }
            },
            {
              "name": "stacked",
              "description": "Apply the stacked prop to all children v-tab components.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "grow",
              "description": "Force `v-tab`'s to take up all available space.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Sets the height of the tabs bar.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "hideSlider",
              "description": "Hide's the generated `v-tabs-slider`.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "sliderColor",
              "description": "Changes the background color of an auto-generated `v-tabs-slider`.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "centerActive",
              "description": "Forces the selected tab to be centered.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the tabs. Can be either `horizontal` or `vertical`.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "nextIcon",
              "description": "Right pagination icon.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prevIcon",
              "description": "Left pagination icon.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "showArrows",
              "description": "Show pagination arrows if the tab items overflow their container. For mobile devices, arrows will only display when using this prop.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "mobileBreakpoint",
              "description": "Sets the designated mobile breakpoint for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "number | 'xs' | 'sm' | 'md' | 'lg' | 'xl' | 'xxl'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "multiple",
              "description": "Allows one to select multiple items.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "max",
              "description": "Sets a maximum number of selections that can be made.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "value": {
                "kind": "expression",
                "type": "number"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'v-slide-group-item--active'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "disabled",
              "description": "Puts all children components into a disabled state.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tabs#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTextField",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTextField"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-text-field",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "flat",
              "description": "Removes elevation (shadow) added to element when using the **solo** or **solo-inverted** props.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "autofocus",
              "description": "Enables autofocus.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input’s placeholder text.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "role",
              "description": "The role attribute applied to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "type",
              "description": "Sets input type.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the outnside the component's input, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the input orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "Applied when using **clearable** and the input is dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Prepends an icon inside the component's input, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'underlined'\n  | 'outlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n  | 'plain'"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Adds a border radius to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "counterValue",
              "description": "Function returns the counter display text.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "number | ((value: any) => number)"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:control",
              "description": "Emitted when the main input is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "mousedown:control",
              "description": "Event that is emitted when using mousedown on the main control area.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots"
            },
            {
              "name": "counter",
              "description": "Slot for the input’s counter text.",
              "doc-url": "https://vuetifyjs.com/api/v-text-field#slots",
              "vue-properties": [
                {
                  "name": "counter",
                  "type": "string"
                },
                {
                  "name": "max",
                  "type": "string | number"
                },
                {
                  "name": "value",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTextarea",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTextarea"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-textarea",
          "attributes": [
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "counter",
              "description": "Creates counter for input length; if no number is specified, it defaults to 25. Does not apply any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | true"
              }
            },
            {
              "name": "flat",
              "description": "Removes box shadow when using a variant with elevation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "autoGrow",
              "description": "Automatically grow the textarea depending on amount of text.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "autofocus",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VTextarea.json))",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prefix",
              "description": "Displays prefix text.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "placeholder",
              "description": "Sets the input's placeholder text.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentPlaceholder",
              "description": "Forces placeholder to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentCounter",
              "description": "Forces counter to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noResize",
              "description": "Remove resize handle.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rows",
              "description": "Default row count.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "5",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxRows",
              "description": "Specifies the maximum number of row count",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "suffix",
              "description": "Displays suffix text.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "id",
              "description": "Sets the DOM id on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "appendIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component after default content in the **append** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "centerAffix",
              "description": "Vertically align **appendInner**, **prependInner**, **clearIcon** and **label** in the center.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependIcon",
              "description": "Prepends an icon to the component, uses the same syntax as `v-icon`.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "hideSpinButtons",
              "description": "Hides spin buttons on the input when type is set to `number`.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hint",
              "description": "Displays hint text below the input when focused. Force this always open with the [persistent-hint](#props-persistent-hint) property.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "persistentHint",
              "description": "Forces [hint](#props-hint) to always be visible.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "messages",
              "description": "Displays a list of messages or a single message if using a string.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "direction",
              "description": "Changes the direction of the input.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "reverse",
              "description": "Reverses the orientation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the input.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDetails",
              "description": "Hides hint and validation errors. When set to `auto` messages will be rendered only if there's a message (hint, error message, counter value etc) to display.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean | 'auto'"
              }
            },
            {
              "name": "appendInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **append-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "bgColor",
              "description": "Applies specified color to the control's background. Used on components that also support the **color** prop. - supports utility colors (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "clearable",
              "description": "Allows for the component to be cleared.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "clearIcon",
              "description": "The icon used when the **clearable** prop is set to true.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'$clear'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "active",
              "description": "Controls the **active** state of the item. This is typically used to highlight the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "baseColor",
              "description": "Sets the color of the input when it is not focused.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "dirty",
              "description": "Manually apply the dirty state styling.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "persistentClear",
              "description": "Always show the clearable icon when the input is dirty (By default it only shows on hover).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "prependInnerIcon",
              "description": "Creates a [v-icon](/api/v-icon/) component in the **prepend-inner** slot.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "singleLine",
              "description": "Label does not move on focus/dirty.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "'filled'",
              "value": {
                "kind": "expression",
                "type": "| 'underlined'\n  | 'outlined'\n  | 'filled'\n  | 'solo'\n  | 'solo-inverted'\n  | 'solo-filled'\n  | 'plain'"
              }
            },
            {
              "name": "loading",
              "description": "Displays linear progress bar. Can either be a String which specifies which color is applied to the progress bar (any material color or theme color - **primary**, **secondary**, **success**, **info**, **warning**, **error**) or a Boolean which uses the component **color** (set by color prop - if it's supported by the component) or the primary color.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "counterValue",
              "description": "Display the input length but do not provide any validation.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "(value: any) => number"
              }
            },
            {
              "name": "modelModifiers",
              "description": "**FOR INTERNAL USE ONLY**",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            }
          ],
          "events": [
            {
              "name": "click:prepend",
              "description": "Emitted when prepended icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:append",
              "description": "Emitted when append icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:focused",
              "description": "Emitted when the input is focused or blurred",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "click:clear",
              "description": "Emitted when clearable icon clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:appendInner",
              "description": "Emitted when appended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:prependInner",
              "description": "Emitted when prepended inner icon is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "click:control",
              "description": "Emitted when the main input is clicked.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "mousedown:control",
              "description": "Event that is emitted when using mousedown on the main control area.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[MouseEvent]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[string]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "details",
              "description": "Slot for custom input details to modifying the display of [messages](#props-messages).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "id",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "messagesId",
                  "type": "ComputedRef<string>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "message",
              "description": "Slot used to customize the message content.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "message",
                  "type": "string"
                }
              ]
            },
            {
              "name": "clear",
              "description": "Slot for custom clear icon (displayed when the **clearable** prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots"
            },
            {
              "name": "prepend-inner",
              "description": "Slot that is prepended to the input.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "append-inner",
              "description": "Adds an item inside the input content.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "isFocused",
                  "type": "Ref<boolean>"
                },
                {
                  "name": "controlRef",
                  "type": "Ref<HTMLElement | undefined>"
                },
                {
                  "name": "focus",
                  "type": "() => void"
                },
                {
                  "name": "blur",
                  "type": "() => void"
                }
              ]
            },
            {
              "name": "label",
              "description": "The default slot of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots"
            },
            {
              "name": "loader",
              "description": "Slot for custom loader (displayed when [loading](#props-loading) prop is equal to true).",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "color",
                  "type": "string"
                },
                {
                  "name": "isActive",
                  "type": "boolean"
                }
              ]
            },
            {
              "name": "counter",
              "description": "Slot for the input’s counter text.",
              "doc-url": "https://vuetifyjs.com/api/v-textarea#slots",
              "vue-properties": [
                {
                  "name": "counter",
                  "type": "string"
                },
                {
                  "name": "max",
                  "type": "string | number"
                },
                {
                  "name": "value",
                  "type": "string | number"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VThemeProvider",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VThemeProvider"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-theme-provider",
          "attributes": [
            {
              "name": "withBackground",
              "description": "MISSING DESCRIPTION ([edit in github](https://github.com/vuetifyjs/vuetify/tree//packages/api-generator/src/locale/en/VThemeProvider.json))",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "All child components will have their theme overridden. Must have exactly one root element.",
              "doc-url": "https://vuetifyjs.com/api/v-theme-provider#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTimeline",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTimeline"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-timeline",
          "attributes": [
            {
              "name": "justify",
              "description": "Places timeline line at the center or automatically on the left or right side.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lineInset",
              "description": "Specifies the distance between the line and the dot of timeline items.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "lineThickness",
              "description": "Thickness of the timeline line.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "2",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "lineColor",
              "description": "Color of the timeline line.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "align",
              "description": "Places the timeline dot at the top or center of the timeline item.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'center'",
              "value": {
                "kind": "expression",
                "type": "'center' | 'start'"
              }
            },
            {
              "name": "direction",
              "description": "Display timeline in a **vertical** or **horizontal** direction.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "default": "'vertical'",
              "value": {
                "kind": "expression",
                "type": "'vertical' | 'horizontal'"
              }
            },
            {
              "name": "side",
              "description": "Display all timeline items on one side of the timeline, either **before** or **after**.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end'"
              }
            },
            {
              "name": "truncateLine",
              "description": "Truncate timeline directly at the **start** or **end** of the line, or on **both** ends.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#props",
              "value": {
                "kind": "expression",
                "type": "'start' | 'end' | 'both'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTimelineItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTimelineItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-timeline-item",
          "attributes": [
            {
              "name": "icon",
              "description": "Apply a specific icon to the inside dot using the [v-icon](/components/icons/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "dotColor",
              "description": "Color of the item dot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "fillDot",
              "description": "Remove outer border of item dot, making the color fill the entire dot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideDot",
              "description": "Hide the timeline item dot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "hideOpposite",
              "description": "Hide opposite content if it exists.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "iconColor",
              "description": "Color of the icon.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "lineInset",
              "description": "Specifies the distance between the line and the dot of the item.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "size",
              "description": "Size of the item dot",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#props",
              "value": {
                "kind": "expression",
                "type": "'default' | 'compact'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#slots"
            },
            {
              "name": "icon",
              "description": "Used to customize the icon inside the item dot.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#slots"
            },
            {
              "name": "opposite",
              "description": "Used to customize the opposite side of timeline items.",
              "doc-url": "https://vuetifyjs.com/api/v-timeline-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VToolbar",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VToolbar"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-toolbar",
          "attributes": [
            {
              "name": "image",
              "description": "Specifies a [v-img](/components/images) as the component's background.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "title",
              "description": "Specify a title text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "flat",
              "description": "Removes the toolbar's box-shadow.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "absolute",
              "description": "Applies position: absolute to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "collapse",
              "description": "Puts the toolbar into a collapsed state reducing its maximum width.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "density",
              "description": "Adjusts the vertical height used by the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "'default'",
              "value": {
                "kind": "expression",
                "type": "'default' | 'prominent' | 'comfortable' | 'compact'"
              }
            },
            {
              "name": "extended",
              "description": "Use this prop to increase the height of the toolbar _without_ using the `extension` slot for adding content. May be used in conjunction with the **extension-height** prop, and any of the other props that affect the height of the toolbar, e.g. **prominent**, **dense**, etc., **WITH THE EXCEPTION** of **height**.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "extensionHeight",
              "description": "Specify an explicit height for the `extension` slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "48",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "floating",
              "description": "Applies **display: inline-flex** to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "height",
              "description": "Designates a specific height for the toolbar. Overrides the heights imposed by other props, e.g. **prominent**, **dense**, **extended**, etc.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "64",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "border",
              "description": "Applies border styles to component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "elevation",
              "description": "Designates an elevation applied to the component between 0 and 24. You can find more information on the [elevation page](/styles/elevation).",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "rounded",
              "description": "Designates the **border-radius** applied to the component. You can find more information on the [Border Radius page](/styles/border-radius).",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string | number | boolean"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "default": "'header'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "image",
              "description": "Expects the [v-img](/components/images) component. Scoped **props** should be applied with `v-bind=\"props\"`.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "prepend",
              "description": "Adds an item outside the input and before input content.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "append",
              "description": "Adds an item inside the input and after input content.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "title",
              "description": "Slot for the component's title content.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            },
            {
              "name": "extension",
              "description": "Slot positioned directly under the main content of the toolbar. Height of this slot can be set explicitly with the **extension-height** prop. If this slot has no content, the **extended** prop may be used instead.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VToolbarItems",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VToolbarItems"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-toolbar-items",
          "attributes": [
            {
              "name": "color",
              "description": "Applies specified color to the control - supports utility colors (for example `success` or `purple`) or css color (for example `success` or `purple`) or css color (`#033` or `rgba(255, 0, 0, 0.5)`). Find a list of built-in classes on the [colors page](/styles/colors#material-colors).",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-items#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "variant",
              "description": "Applies a distinct style to the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-items#props",
              "default": "'text'",
              "value": {
                "kind": "expression",
                "type": "'flat' | 'elevated' | 'tonal' | 'outlined' | 'text' | 'plain'"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-items#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VToolbarTitle",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VToolbarTitle"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-toolbar-title",
          "attributes": [
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#slots"
            },
            {
              "name": "text",
              "description": "Slot for the component's text content.",
              "doc-url": "https://vuetifyjs.com/api/v-toolbar-title#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VTooltip",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VTooltip"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-tooltip",
          "attributes": [
            {
              "name": "activator",
              "description": "Explicitly sets the overlay's activator.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "Element | 'parent' | (string & {}) | ComponentPublicInstance"
              }
            },
            {
              "name": "id",
              "description": "HTML id attribute of the tooltip overlay. If not set, a globally unique id will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "text",
              "description": "Specify content text for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "closeOnBack",
              "description": "Closes the overlay content when the browser's back button is pressed or `$router.back()` is called, cancelling the original navigation. `persistent` overlays will cancel navigation and animate as if they were clicked outside instead of closing.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contained",
              "description": "Limits the size of the component and scrim to its offset parent. Implies `absolute` and `attach`. (Note: The parent element must have position: relative.).",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "contentClass",
              "description": "Applies a custom class to the detached element. This is useful because the content is moved to the beginning of the `v-app` component (unless the **attach** prop is provided) and is not targetable by classes passed directly on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "contentProps",
              "description": "Apply custom properties to the content.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "noClickAnimation",
              "description": "Disables the bounce effect when clicking outside of the content element when using the persistent prop.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "scrim",
              "description": "Accepts true/false to enable background, and string to define color.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "zIndex",
              "description": "The z-index used for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "2000",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "target",
              "description": "For locationStrategy=\"connected\", specify an element or array of x,y coordinates that the overlay should position itself relative to. This will be the activator element by default.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "| Element\n  | 'parent'\n  | 'cursor'\n  | (string & {})\n  | ComponentPublicInstance\n  | [number, number]"
              }
            },
            {
              "name": "activatorProps",
              "description": "Apply custom properties to the activator.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "{}",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "openOnClick",
              "description": "Designates whether the tooltip should open on activator click.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnHover",
              "description": "Designates whether the tooltip should open on activator hover.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "openOnFocus",
              "description": "Activate the component when the activator is focused.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeOnContentClick",
              "description": "Closes component when you click on its content.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "closeDelay",
              "description": "Delay (in ms) after which menu closes (when open-on-hover prop is set to true).",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "openDelay",
              "description": "Delay (in ms) after which tooltip opens (when `open-on-hover` prop is set to **true**).",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Sets the height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "0",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "true",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "locationStrategy",
              "description": "A function used to specifies how the component should position relative to its activator.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'connected'",
              "value": {
                "kind": "expression",
                "type": "'static' | 'connected' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/locationStrategies.ts#L36-L40\" target=\"_blank\">LocationStrategyFn</a>"
              }
            },
            {
              "name": "location",
              "description": "Specifies the anchor point for positioning the component, using directional cues to align it either horizontally, vertically, or both..",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'end'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a>"
              }
            },
            {
              "name": "origin",
              "description": "Sets the transition origin on the element. You can find more information on the MDN documentation [for transition origin](https://developer.mozilla.org/en-US/docs/Web/CSS/transform-origin).",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'auto'",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/util/anchor.ts#L8-L14\" target=\"_blank\">Anchor</a> | 'auto' | 'overlap'"
              }
            },
            {
              "name": "offset",
              "description": "A single value that offsets content away from the target based upon what side it is on.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "10",
              "value": {
                "kind": "expression",
                "type": "string | number | number[]"
              }
            },
            {
              "name": "scrollStrategy",
              "description": "Strategy used when the component is activate and user scrolls.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "'reposition'",
              "value": {
                "kind": "expression",
                "type": "'none' | 'close' | 'block' | 'reposition' | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/components/VOverlay/scrollStrategies.ts#L17-L17\" target=\"_blank\">ScrollStrategyFn</a>"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "transition",
              "description": "Sets the component transition. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | (TransitionProps & { component: Component })"
              }
            },
            {
              "name": "attach",
              "description": "Specifies which DOM element the overlay content should teleport to. Can be a direct element reference, querySelector string, or `true` to disable teleporting. Uses `body` by default.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean | Element"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "Ref<boolean>"
                }
              ]
            },
            {
              "name": "activator",
              "description": "When used, will activate the component when clicked (or hover for specific components). This manually stops the event propagation. Without this slot, if you open the component through its model, you will need to manually stop the event propagation.",
              "doc-url": "https://vuetifyjs.com/api/v-tooltip#slots",
              "vue-properties": [
                {
                  "name": "isActive",
                  "type": "boolean"
                },
                {
                  "name": "props",
                  "type": "Record<string, any>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VValidation",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VValidation"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-validation",
          "attributes": [
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "error",
              "description": "Puts the input in a manual error state.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "errorMessages",
              "description": "Puts the input in an error state and passes through custom error messages. Will be combined with any validations that occur from the **rules** prop. This field will not trigger validation.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "string | string[]"
              }
            },
            {
              "name": "maxErrors",
              "description": "Control the maximum number of shown errors from validation.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "1",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "name",
              "description": "Sets the component's name attribute.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "label",
              "description": "Sets the text of the [v-label](/api/v-label/) or [v-field-label](/api/v-field-label/) component.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "readonly",
              "description": "Puts input in readonly state.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "rules",
              "description": "Accepts a mixed array of types `function`, `boolean` and `string`. Functions pass an input value as an argument and must return either `true` / `false` or a `string` containing an error message. The input field will enter an error state if a function returns (or any value in the array contains) `false` or is a `string`.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "<a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/composables/validation.ts#L16-L20\" target=\"_blank\">ValidationRule</a>[]"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "validateOn",
              "description": "Change what type of event triggers validation to run.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "| 'blur'\n  | 'input'\n  | 'submit'\n  | 'blur lazy'\n  | 'input lazy'\n  | 'submit lazy'\n  | 'lazy blur'\n  | 'lazy input'\n  | 'lazy submit'\n  | 'lazy'"
              }
            },
            {
              "name": "validationValue",
              "description": "The value used when applying validation rules.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "focused",
              "description": "Forces a focused state styling on the component.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [
            {
              "name": "update:focused",
              "description": "Event that is emitted when the component's focus state changes.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[boolean]\n"
                }
              ]
            },
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-validation#slots",
              "vue-properties": [
                {
                  "name": "errorMessages",
                  "type": "ComputedRef<string[]>"
                },
                {
                  "name": "isDirty",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isDisabled",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isReadonly",
                  "type": "ComputedRef<boolean>"
                },
                {
                  "name": "isPristine",
                  "type": "ShallowRef<boolean>"
                },
                {
                  "name": "isValid",
                  "type": "ComputedRef<boolean | null>"
                },
                {
                  "name": "isValidating",
                  "type": "ShallowRef<boolean>"
                },
                {
                  "name": "reset",
                  "type": "() => void"
                },
                {
                  "name": "resetValidation",
                  "type": "() => void"
                },
                {
                  "name": "validate",
                  "type": "(silent: boolean) => Promise<string[]>"
                },
                {
                  "name": "validationClasses",
                  "type": "ComputedRef<{ [x: string]: boolean; }>"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VVirtualScroll",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VVirtualScroll"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll",
          "attributes": [
            {
              "name": "items",
              "description": "The array of items to display.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "default": "[]",
              "value": {
                "kind": "expression",
                "type": "unknown[]"
              }
            },
            {
              "name": "renderless",
              "description": "Disables default component rendering functionality.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "itemHeight",
              "description": "Height in pixels of each item to display.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "default": "null",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "height",
              "description": "Height of the component as a css value/",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxHeight",
              "description": "Sets the maximum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "maxWidth",
              "description": "Sets the maximum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minHeight",
              "description": "Sets the minimum height for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "minWidth",
              "description": "Sets the minimum width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            },
            {
              "name": "width",
              "description": "Sets the width for the component.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#props",
              "value": {
                "kind": "expression",
                "type": "string | number"
              }
            }
          ],
          "events": [],
          "slots": [
            {
              "name": "default",
              "description": "Default slot to render a single item.",
              "doc-url": "https://vuetifyjs.com/api/v-virtual-scroll#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VWindow",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VWindow"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-window",
          "attributes": [
            {
              "name": "continuous",
              "description": "If `true`, window will \"wrap around\" from the last item to the first, and from the first item to the last.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "nextIcon",
              "description": "Icon used for the \"next\" button if `show-arrows` is `true`.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'$next'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "prevIcon",
              "description": "Icon used for the \"prev\" button if `show-arrows` is `true`.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'$prev'",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "reverse",
              "description": "Reverse the normal transition direction.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "showArrows",
              "description": "Display the \"next\" and \"prev\" buttons.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "touch",
              "description": "Provide a custom **left** and **right** function when swiped left or right.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "value": {
                "kind": "expression",
                "type": "boolean | <a href=\"https://github.com/vuetifyjs/vuetify/blob/master/packages/vuetify/src/directives/touch/index.ts#L9-L17\" target=\"_blank\">TouchHandlers</a>"
              }
            },
            {
              "name": "direction",
              "description": "The transition direction when changing windows.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'horizontal'",
              "value": {
                "kind": "expression",
                "type": "'horizontal' | 'vertical'"
              }
            },
            {
              "name": "modelValue",
              "description": "The v-model value of the component. If component supports the **multiple** prop, this defaults to an empty array.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "value": {
                "kind": "expression",
                "type": "unknown"
              }
            },
            {
              "name": "disabled",
              "description": "Removes the ability to click or target the component.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'v-window-item--active'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "mandatory",
              "description": "Forces at least one item to always be selected (if available).",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'force'",
              "value": {
                "kind": "expression",
                "type": "boolean | 'force'"
              }
            },
            {
              "name": "tag",
              "description": "Specify a custom tag used on the root element.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "default": "'div'",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "theme",
              "description": "Specify a theme for this component and all of its children.",
              "doc-url": "https://vuetifyjs.com/api/v-window#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            }
          ],
          "events": [
            {
              "name": "update:modelValue",
              "description": "Event that is emitted when the component's model changes.",
              "doc-url": "https://vuetifyjs.com/api/v-window#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[unknown]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean | undefined> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string | undefined>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean | undefined; }[]>; disabled: Ref<boolean | undefined>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "additional",
              "description": "Slot for additional content at the end of the component.",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "group",
                  "type": "{ register: (item: { id: number; value: Ref<unknown>; disabled: Ref<boolean | undefined> }, cmp: ComponentInternalInstance) => void; unregister: (id: number) => void; select: (id: number, value: boolean) => void; selected: Ref<readonly number[]>; isSelected: (id: number) => boolean; prev: () => void; next: () => void; selectedClass: Ref<string | undefined>; items: ComputedRef<{ id: number; value: unknown; disabled: boolean | undefined; }[]>; disabled: Ref<boolean | undefined>; getItemIndex: (value: unknown) => number }"
                }
              ]
            },
            {
              "name": "prev",
              "description": "Slot displaying the arrow switching to the previous item.",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: any; class: string; onClick: () => void; 'aria-label': string }"
                }
              ]
            },
            {
              "name": "next",
              "description": "Slot displaying the arrow switching to the next item.",
              "doc-url": "https://vuetifyjs.com/api/v-window#slots",
              "vue-properties": [
                {
                  "name": "props",
                  "type": "{ icon: any; class: string; onClick: () => void; 'aria-label': string }"
                }
              ]
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        },
        {
          "name": "VWindowItem",
          "source": {
            "module": "./src/components/index.ts",
            "symbol": "VWindowItem"
          },
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/v-window-item",
          "attributes": [
            {
              "name": "reverseTransition",
              "description": "Sets the reverse transition.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "transition",
              "description": "The transition used when the component progressing through items. Can be one of the [built in](/styles/transitions/) or custom transition.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string | boolean"
              }
            },
            {
              "name": "value",
              "description": "The value used when the component is selected in a group. If not provided, a unique ID will be used.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "value": {
                "kind": "expression",
                "type": "any"
              }
            },
            {
              "name": "disabled",
              "description": "Prevents the item from becoming active when using the \"next\" and \"prev\" buttons or the `toggle` method.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            },
            {
              "name": "selectedClass",
              "description": "Configure the active CSS class applied when an item is selected.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "value": {
                "kind": "expression",
                "type": "string"
              }
            },
            {
              "name": "eager",
              "description": "Forces the component's content to render when it mounts. This is useful if you have content that will not be rendered in the DOM that you want crawled for SEO.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#props",
              "default": "false",
              "value": {
                "kind": "expression",
                "type": "boolean"
              }
            }
          ],
          "events": [
            {
              "name": "group:selected",
              "description": "Event that is emitted when an item is selected within a group.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#events",
              "arguments": [
                {
                  "name": "argument",
                  "type": "[{ value: boolean }]\n"
                }
              ]
            }
          ],
          "slots": [
            {
              "name": "default",
              "description": "The default Vue slot.",
              "doc-url": "https://vuetifyjs.com/api/v-window-item#slots"
            }
          ],
          "vue-model": {
            "prop": "modelValue",
            "event": "update:modelValue"
          }
        }
      ],
      "attributes": [
        {
          "name": "ClickOutside",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/ClickOutside",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Ickoutside"
          },
          "vue-argument": {
            "description": "By default takes a function that is invoked when user clicks outside of the element the directive is attached to. It can also be an object, which allows you to provide `closeConditional` and `include` callbacks.",
            "doc-url": "https://vuetifyjs.com/api/ClickOutside#argument"
          }
        },
        {
          "name": "Intersect",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Intersect",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Tersect"
          },
          "vue-argument": {
            "description": "By default takes a handler function that is invoked when the element that the directive is attached to enters or leaves the visible browser area. It can also take an object, which allows you to pass along [IntersectionObserver options](https://developer.mozilla.org/en-US/docs/Web/API/IntersectionObserver/IntersectionObserver).",
            "doc-url": "https://vuetifyjs.com/api/Intersect#argument"
          },
          "vue-modifiers": [
            {
              "name": "once",
              "description": "The provided handler function is only invoked once, the first time the element is visible.",
              "doc-url": "https://vuetifyjs.com/api/Intersect#modifiers"
            },
            {
              "name": "quiet",
              "description": "Will not invoke the handler function if the element is visible when the IntersectionObserver is created.",
              "doc-url": "https://vuetifyjs.com/api/Intersect#modifiers"
            }
          ]
        },
        {
          "name": "Mutate",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Mutate",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Tate"
          },
          "vue-argument": {
            "description": "By default takes a handler function that is invoked when the element that the directive is attached to is mutated. It can also take an object, which allows you to pass along [MutationObserver options](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe).",
            "doc-url": "https://vuetifyjs.com/api/Mutate#argument"
          },
          "vue-modifiers": [
            {
              "name": "attr",
              "description": "Sets the value of [attributes](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/attributes) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "char",
              "description": "Sets the value of [characterData](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/characterData) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "child",
              "description": "Sets the value of [childList](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserverInit/childList) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "sub",
              "description": "Sets the value of [subtree](https://developer.mozilla.org/en-US/docs/Web/API/MutationObserver/observe#Parameters) to true.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "once",
              "description": "The provided handler function is only invoked once.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            },
            {
              "name": "immediate",
              "description": "The provided handler function is invoked immediately when directive is attached to element.",
              "doc-url": "https://vuetifyjs.com/api/Mutate#modifiers"
            }
          ]
        },
        {
          "name": "Resize",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Resize",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Size"
          },
          "vue-argument": {
            "description": "The provided handler function will be invoked each time the browser window is resized.",
            "doc-url": "https://vuetifyjs.com/api/Resize#argument"
          }
        },
        {
          "name": "Ripple",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Ripple",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Pple"
          },
          "vue-argument": {
            "description": "An object containing options for the ripple effect. `class` applies a custom class to the ripple, and can be used for changing color. `center` forces the ripple to originate from the center of the target.",
            "doc-url": "https://vuetifyjs.com/api/Ripple#argument"
          },
          "vue-modifiers": [
            {
              "name": "center",
              "description": "Makes it so that the ripple originates from the center of the element, instead where the user clicked on it.",
              "doc-url": "https://vuetifyjs.com/api/Ripple#modifiers"
            },
            {
              "name": "circle",
              "description": "Changes the ripple behavior to better match circular elements.",
              "doc-url": "https://vuetifyjs.com/api/Ripple#modifiers"
            },
            {
              "name": "stop",
              "description": "Prevents ripples from being triggered on any other elements when the click event is bubbling up.",
              "doc-url": "https://vuetifyjs.com/api/Ripple#modifiers"
            }
          ]
        },
        {
          "name": "Scroll",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Scroll",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Roll"
          },
          "vue-argument": {
            "description": "By default takes a handler function that is invoked whenever the target of the directive is scrolled. It can also take an object, which allows you to pass along event listener options as described [here](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener).",
            "doc-url": "https://vuetifyjs.com/api/Scroll#argument"
          }
        },
        {
          "name": "Touch",
          "description": "",
          "doc-url": "https://vuetifyjs.com/api/Touch",
          "default": "",
          "required": false,
          "value": {
            "kind": "expression"
          },
          "source": {
            "module": "./src/directives/index.ts",
            "symbol": "Uch"
          },
          "vue-argument": {
            "description": "The value is always an object. The `start`, `end`, `move`, `left`, `right`, `up` and `down` functions can be used to invoke a function when the corresponding touch action occurs. If the `parent` option attaches the touch listeners to the parent element instead of the element the directive is used on. The `options` object is described [here](https://developer.mozilla.org/en-US/docs/Web/API/EventTarget/addEventListener).",
            "doc-url": "https://vuetifyjs.com/api/Touch#argument"
          }
        }
      ]
    }
  }
}